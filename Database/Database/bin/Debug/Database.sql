/*
Deployment script for Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Database"
:setvar DefaultFilePrefix "Database"
:setvar DefaultDataPath "C:\Users\FamilieFibi\AppData\Local\Microsoft\VisualStudio\SSDT\Database"
:setvar DefaultLogPath "C:\Users\FamilieFibi\AppData\Local\Microsoft\VisualStudio\SSDT\Database"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[calculationCalendarChg]...';


GO
CREATE TABLE [dbo].[calculationCalendarChg] (
    [id]           INT            NOT NULL,
    [code]         NVARCHAR (128) NOT NULL,
    [name]         NVARCHAR (255) NOT NULL,
    [descript]     NVARCHAR (MAX) NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[calculationCalendarChg].[ix_calculationCalendarChg]...';


GO
CREATE CLUSTERED INDEX [ix_calculationCalendarChg]
    ON [dbo].[calculationCalendarChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[calculationHolidayChg]...';


GO
CREATE TABLE [dbo].[calculationHolidayChg] (
    [calculationCalendarId] INT            NOT NULL,
    [date]                  DATE           NOT NULL,
    [descript]              NVARCHAR (255) NOT NULL,
    [sysVersionId]          ROWVERSION     NOT NULL,
    [sysAppName]            NVARCHAR (128) NOT NULL,
    [sysUserName]           NVARCHAR (128) NOT NULL,
    [sysStartTime]          DATETIME2 (7)  NOT NULL,
    [sysEndTime]            DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[calculationHolidayChg].[ix_calculationHolidayChg]...';


GO
CREATE CLUSTERED INDEX [ix_calculationHolidayChg]
    ON [dbo].[calculationHolidayChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[currencyHolidayChg]...';


GO
CREATE TABLE [dbo].[currencyHolidayChg] (
    [currencyRateTypeId] INT            NOT NULL,
    [date]               DATE           NOT NULL,
    [descript]           NVARCHAR (255) NOT NULL,
    [sysVersionId]       ROWVERSION     NOT NULL,
    [sysAppName]         NVARCHAR (128) NOT NULL,
    [sysUserName]        NVARCHAR (128) NOT NULL,
    [sysStartTime]       DATETIME2 (7)  NOT NULL,
    [sysEndTime]         DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[currencyHolidayChg].[ix_currencyHolidayChg]...';


GO
CREATE CLUSTERED INDEX [ix_currencyHolidayChg]
    ON [dbo].[currencyHolidayChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[currencyPeriodChg]...';


GO
CREATE TABLE [dbo].[currencyPeriodChg] (
    [currencyRateTypeId] INT            NOT NULL,
    [date]               DATE           NOT NULL,
    [dateUTC]            DATETIME       NOT NULL,
    [nextDate]           DATE           NOT NULL,
    [nextDateUTC]        DATETIME       NOT NULL,
    [prevDate]           DATE           NOT NULL,
    [prevDateUTC]        DATETIME       NOT NULL,
    [sysVersionId]       ROWVERSION     NOT NULL,
    [sysAppName]         NVARCHAR (128) NOT NULL,
    [sysUserName]        NVARCHAR (128) NOT NULL,
    [sysStartTime]       DATETIME2 (7)  NOT NULL,
    [sysEndTime]         DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[currencyPeriodChg].[ix_currencyPeriodChg]...';


GO
CREATE CLUSTERED INDEX [ix_currencyPeriodChg]
    ON [dbo].[currencyPeriodChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[currencyRateChg]...';


GO
CREATE TABLE [dbo].[currencyRateChg] (
    [currencyRateTypeId] INT            NOT NULL,
    [toCode]             CHAR (3)       NOT NULL,
    [date]               DATE           NOT NULL,
    [rate]               FLOAT (53)     NOT NULL,
    [sysVersionId]       ROWVERSION     NOT NULL,
    [sysAppName]         NVARCHAR (255) NOT NULL,
    [sysUserName]        NVARCHAR (255) NOT NULL,
    [sysStartTime]       DATETIME2 (7)  NOT NULL,
    [sysEndTime]         DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[currencyRateChg].[ix_currencyRateChg]...';


GO
CREATE CLUSTERED INDEX [ix_currencyRateChg]
    ON [dbo].[currencyRateChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[currencyRateTypeChg]...';


GO
CREATE TABLE [dbo].[currencyRateTypeChg] (
    [id]           INT            NOT NULL,
    [code]         NVARCHAR (128) NOT NULL,
    [baseCode]     CHAR (3)       NOT NULL,
    [name]         NVARCHAR (128) NOT NULL,
    [timeZone]     NVARCHAR (128) NOT NULL,
    [descript]     NVARCHAR (255) NOT NULL,
    [validFrom]    DATE           NOT NULL,
    [validTo]      DATE           NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (128) NOT NULL,
    [sysUserName]  NVARCHAR (128) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[currencyRateTypeChg].[ix_currencyRateTypeChg]...';


GO
CREATE CLUSTERED INDEX [ix_currencyRateTypeChg]
    ON [dbo].[currencyRateTypeChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[currencyTimeTableChg]...';


GO
CREATE TABLE [dbo].[currencyTimeTableChg] (
    [currencyRateTypeId] INT            NOT NULL,
    [weekDay]            NVARCHAR (12)  NOT NULL,
    [closeTimeLocal]     TIME (7)       NOT NULL,
    [validFrom]          DATE           NOT NULL,
    [validTo]            DATE           NOT NULL,
    [sysVersionId]       ROWVERSION     NOT NULL,
    [sysAppName]         NVARCHAR (255) NOT NULL,
    [sysUserName]        NVARCHAR (255) NOT NULL,
    [sysStartTime]       DATETIME2 (7)  NOT NULL,
    [sysEndTime]         DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[currencyTimeTableChg].[ix_currencyTimeTableChg]...';


GO
CREATE CLUSTERED INDEX [ix_currencyTimeTableChg]
    ON [dbo].[currencyTimeTableChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[exchangeChg]...';


GO
CREATE TABLE [dbo].[exchangeChg] (
    [id]           INT            NOT NULL,
    [code]         VARCHAR (12)   NOT NULL,
    [validFrom]    DATE           NOT NULL,
    [validTo]      DATE           NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[exchangeChg].[ix_exchangeChg]...';


GO
CREATE CLUSTERED INDEX [ix_exchangeChg]
    ON [dbo].[exchangeChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[exchangeDescriptChg]...';


GO
CREATE TABLE [dbo].[exchangeDescriptChg] (
    [exchangeId]   INT            NOT NULL,
    [name]         NVARCHAR (255) NOT NULL,
    [countryCode]  CHAR (2)       NOT NULL,
    [timeZone]     VARCHAR (55)   NOT NULL,
    [validFrom]    DATE           NOT NULL,
    [validTo]      DATE           NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[exchangeDescriptChg].[ix_exchangeDescriptChg]...';


GO
CREATE CLUSTERED INDEX [ix_exchangeDescriptChg]
    ON [dbo].[exchangeDescriptChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[exchangeHolidayChg]...';


GO
CREATE TABLE [dbo].[exchangeHolidayChg] (
    [exchangeId]   INT            NOT NULL,
    [date]         DATE           NOT NULL,
    [descript]     NVARCHAR (255) NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (128) NOT NULL,
    [sysUserName]  NVARCHAR (128) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[exchangeHolidayChg].[ix_exchangeHolidayChg]...';


GO
CREATE CLUSTERED INDEX [ix_exchangeHolidayChg]
    ON [dbo].[exchangeHolidayChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[exchangePeriodChg]...';


GO
CREATE TABLE [dbo].[exchangePeriodChg] (
    [exchangeId]   INT            NOT NULL,
    [date]         DATE           NOT NULL,
    [dateUTC]      DATETIME       NOT NULL,
    [nextDate]     DATE           NOT NULL,
    [nextDateUTC]  DATETIME       NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (128) NOT NULL,
    [sysUserName]  NVARCHAR (128) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[exchangePeriodChg].[ix_exchangePeriodChg]...';


GO
CREATE CLUSTERED INDEX [ix_exchangePeriodChg]
    ON [dbo].[exchangePeriodChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[exchangeTimeTableChg]...';


GO
CREATE TABLE [dbo].[exchangeTimeTableChg] (
    [exchangeId]     INT            NOT NULL,
    [weekDay]        NVARCHAR (12)  NOT NULL,
    [closeTimeLocal] TIME (7)       NOT NULL,
    [validFrom]      DATE           NOT NULL,
    [validTo]        DATE           NOT NULL,
    [sysVersionId]   ROWVERSION     NOT NULL,
    [sysAppName]     NVARCHAR (255) NOT NULL,
    [sysUserName]    NVARCHAR (255) NOT NULL,
    [sysStartTime]   DATETIME2 (7)  NOT NULL,
    [sysEndTime]     DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[exchangeTimeTableChg].[ix_exchangeTimeTableChg]...';


GO
CREATE CLUSTERED INDEX [ix_exchangeTimeTableChg]
    ON [dbo].[exchangeTimeTableChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[indexChg]...';


GO
CREATE TABLE [dbo].[indexChg] (
    [id]           INT            NOT NULL,
    [code]         NVARCHAR (128) NOT NULL,
    [portfolioId]  INT            NOT NULL,
    [baseDate]     DATE           NOT NULL,
    [baseValue]    FLOAT (53)     NOT NULL,
    [launchDate]   DATE           NOT NULL,
    [delistDate]   DATE           NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[indexChg].[ix_indexChg]...';


GO
CREATE CLUSTERED INDEX [ix_indexChg]
    ON [dbo].[indexChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[indexDescriptChg]...';


GO
CREATE TABLE [dbo].[indexDescriptChg] (
    [id]              INT              NOT NULL,
    [indexId]         INT              NOT NULL,
    [name]            NVARCHAR (255)   NOT NULL,
    [ISIN]            CHAR (12)        NULL,
    [SEDOL]           CHAR (7)         NULL,
    [RIC]             VARCHAR (38)     NOT NULL,
    [bloombergTicker] VARCHAR (38)     NOT NULL,
    [currencyCode]    CHAR (3)         NOT NULL,
    [replCost]        NUMERIC (38, 15) NOT NULL,
    [validFrom]       DATE             NOT NULL,
    [validTo]         DATE             NOT NULL,
    [sysVersionId]    ROWVERSION       NOT NULL,
    [sysAppName]      NVARCHAR (128)   NOT NULL,
    [sysUserName]     NVARCHAR (128)   NOT NULL,
    [sysStartTime]    DATETIME2 (7)    NOT NULL,
    [sysEndTime]      DATETIME2 (7)    NOT NULL
);


GO
PRINT N'Creating [dbo].[indexDescriptChg].[ix_indexDescriptChg]...';


GO
CREATE CLUSTERED INDEX [ix_indexDescriptChg]
    ON [dbo].[indexDescriptChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[indexValueChg]...';


GO
CREATE TABLE [dbo].[indexValueChg] (
    [indexId]       INT            NOT NULL,
    [date]          DATE           NOT NULL,
    [cumCostFactor] FLOAT (53)     NOT NULL,
    [value]         FLOAT (53)     NOT NULL,
    [sysVersionId]  ROWVERSION     NOT NULL,
    [sysAppName]    NVARCHAR (255) NOT NULL,
    [sysUserName]   NVARCHAR (255) NOT NULL,
    [sysStartTime]  DATETIME2 (7)  NOT NULL,
    [sysEndTime]    DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[indexValueChg].[ix_indexValueChg]...';


GO
CREATE CLUSTERED INDEX [ix_indexValueChg]
    ON [dbo].[indexValueChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[issueChg]...';


GO
CREATE TABLE [dbo].[issueChg] (
    [id]           INT            NOT NULL,
    [code]         NVARCHAR (128) NOT NULL,
    [issuerId]     INT            NOT NULL,
    [type]         NVARCHAR (128) NOT NULL,
    [class]        NVARCHAR (128) NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[issueChg].[ix_issueChg]...';


GO
CREATE CLUSTERED INDEX [ix_issueChg]
    ON [dbo].[issueChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[issueDescriptChg]...';


GO
CREATE TABLE [dbo].[issueDescriptChg] (
    [issueId]      INT            NOT NULL,
    [name]         NVARCHAR (255) NOT NULL,
    [ISIN]         CHAR (12)      NULL,
    [validFrom]    DATE           NOT NULL,
    [validTo]      DATE           NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[issueDescriptChg].[ix_issueDescriptChg]...';


GO
CREATE CLUSTERED INDEX [ix_issueDescriptChg]
    ON [dbo].[issueDescriptChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[issuerChg]...';


GO
CREATE TABLE [dbo].[issuerChg] (
    [id]           INT            NOT NULL,
    [code]         NVARCHAR (128) NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[issuerChg].[ix_issuerChg]...';


GO
CREATE CLUSTERED INDEX [ix_issuerChg]
    ON [dbo].[issuerChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[issuerDescriptChg]...';


GO
CREATE TABLE [dbo].[issuerDescriptChg] (
    [issuerId]     INT            NOT NULL,
    [name]         NVARCHAR (255) NOT NULL,
    [industryCode] VARCHAR (25)   NULL,
    [countryCode]  CHAR (2)       NULL,
    [validFrom]    DATE           NOT NULL,
    [validTo]      DATE           NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[issuerDescriptChg].[ix_issuerDescriptChg]...';


GO
CREATE CLUSTERED INDEX [ix_issuerDescriptChg]
    ON [dbo].[issuerDescriptChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[portfolioChg]...';


GO
CREATE TABLE [dbo].[portfolioChg] (
    [id]           INT            NOT NULL,
    [code]         NVARCHAR (128) NOT NULL,
    [name]         NVARCHAR (128) NOT NULL,
    [validFrom]    DATE           NOT NULL,
    [validTo]      DATE           NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[portfolioChg].[ix_portfolioChg]...';


GO
CREATE CLUSTERED INDEX [ix_portfolioChg]
    ON [dbo].[portfolioChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[portfolioConfigChg]...';


GO
CREATE TABLE [dbo].[portfolioConfigChg] (
    [portfolioId]           INT            NOT NULL,
    [calculationCalendarId] INT            NOT NULL,
    [reviewCalendarId]      INT            NOT NULL,
    [currencyRateTypeId]    INT            NOT NULL,
    [valuationTimeZone]     NVARCHAR (128) NOT NULL,
    [validFrom]             DATE           NOT NULL,
    [validTo]               DATE           NOT NULL,
    [sysVersionId]          ROWVERSION     NOT NULL,
    [sysAppName]            NVARCHAR (255) NOT NULL,
    [sysUserName]           NVARCHAR (255) NOT NULL,
    [sysStartTime]          DATETIME2 (7)  NOT NULL,
    [sysEndTime]            DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[portfolioConfigChg].[ix_portfolioConfigChg]...';


GO
CREATE CLUSTERED INDEX [ix_portfolioConfigChg]
    ON [dbo].[portfolioConfigChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[portfolioConsChg]...';


GO
CREATE TABLE [dbo].[portfolioConsChg] (
    [portfolioId]  INT            NOT NULL,
    [quoteId]      INT            NOT NULL,
    [validFrom]    DATE           NOT NULL,
    [validTo]      DATE           NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[portfolioConsChg].[ix_portfolioConsChg]...';


GO
CREATE CLUSTERED INDEX [ix_portfolioConsChg]
    ON [dbo].[portfolioConsChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[portfolioEventChg]...';


GO
CREATE TABLE [dbo].[portfolioEventChg] (
    [id]                    INT            NOT NULL,
    [portfolioId]           INT            NOT NULL,
    [quoteId]               INT            NOT NULL,
    [effectiveDate]         DATE           NOT NULL,
    [actionType]            VARCHAR (128)  NOT NULL,
    [currencyCode]          CHAR (3)       NULL,
    [formula_openPrice]     NVARCHAR (MAX) NULL,
    [formula_openShares]    NVARCHAR (MAX) NULL,
    [formula_openFreefloat] NVARCHAR (MAX) NULL,
    [formula_parameter]     NVARCHAR (MAX) NULL,
    [sysVersionId]          ROWVERSION     NOT NULL,
    [sysAppName]            NVARCHAR (255) NOT NULL,
    [sysUserName]           NVARCHAR (255) NOT NULL,
    [sysStartTime]          DATETIME2 (7)  NOT NULL,
    [sysEndTime]            DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[portfolioEventChg].[ix_portfolioEventChg]...';


GO
CREATE CLUSTERED INDEX [ix_portfolioEventChg]
    ON [dbo].[portfolioEventChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[portfolioEventResultChg]...';


GO
CREATE TABLE [dbo].[portfolioEventResultChg] (
    [portfolioEventId]    INT            NOT NULL,
    [priceCurrencyCode]   CHAR (3)       NULL,
    [closePrice]          FLOAT (53)     NULL,
    [closeCurrencyRate]   FLOAT (53)     NULL,
    [closeShareFactor]    FLOAT (53)     NULL,
    [closeFreefloat]      FLOAT (53)     NULL,
    [openShareFactor]     FLOAT (53)     NULL,
    [openFreefloatFactor] FLOAT (53)     NULL,
    [openPrice]           FLOAT (53)     NULL,
    [sysVersionId]        ROWVERSION     NOT NULL,
    [sysAppName]          NVARCHAR (255) NOT NULL,
    [sysUserName]         NVARCHAR (255) NOT NULL,
    [sysStartTime]        DATETIME2 (7)  NOT NULL,
    [sysEndTime]          DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[portfolioEventResultChg].[ix_portfolioEventResultChg]...';


GO
CREATE CLUSTERED INDEX [ix_portfolioEventResultChg]
    ON [dbo].[portfolioEventResultChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[portfolioTimeTableChg]...';


GO
CREATE TABLE [dbo].[portfolioTimeTableChg] (
    [portfolioId]        INT            NOT NULL,
    [weekDay]            NVARCHAR (12)  NOT NULL,
    [valuationTimeLocal] TIME (7)       NOT NULL,
    [validFrom]          DATE           NOT NULL,
    [validTo]            DATE           NOT NULL,
    [sysVersionId]       ROWVERSION     NOT NULL,
    [sysAppName]         NVARCHAR (255) NOT NULL,
    [sysUserName]        NVARCHAR (255) NOT NULL,
    [sysStartTime]       DATETIME2 (7)  NOT NULL,
    [sysEndTime]         DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[portfolioTimeTableChg].[ix_portfolioTimeTableChg]...';


GO
CREATE CLUSTERED INDEX [ix_portfolioTimeTableChg]
    ON [dbo].[portfolioTimeTableChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[portfolioValueChg]...';


GO
CREATE TABLE [dbo].[portfolioValueChg] (
    [portfolioId]  INT            NOT NULL,
    [date]         DATE           NOT NULL,
    [openMcap]     FLOAT (53)     NOT NULL,
    [closeMcap]    FLOAT (53)     NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[portfolioValueChg].[ix_portfolioValueChg]...';


GO
CREATE CLUSTERED INDEX [ix_portfolioValueChg]
    ON [dbo].[portfolioValueChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[portfolioValuePeriodChg]...';


GO
CREATE TABLE [dbo].[portfolioValuePeriodChg] (
    [portfolioId]  INT            NOT NULL,
    [date]         DATE           NOT NULL,
    [dateUTC]      DATETIME       NOT NULL,
    [nextDate]     DATE           NOT NULL,
    [nextDateUTC]  DATETIME       NOT NULL,
    [prevDate]     DATE           NOT NULL,
    [prevDateUTC]  DATETIME       NOT NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (128) NOT NULL,
    [sysUserName]  NVARCHAR (128) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[portfolioValuePeriodChg].[ix_portfolioValuePeriodChg]...';


GO
CREATE CLUSTERED INDEX [ix_portfolioValuePeriodChg]
    ON [dbo].[portfolioValuePeriodChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[quoteChg]...';


GO
CREATE TABLE [dbo].[quoteChg] (
    [id]             INT            NOT NULL,
    [code]           NVARCHAR (128) NOT NULL,
    [issueId]        INT            NOT NULL,
    [firstTradeDate] DATE           NOT NULL,
    [delistDate]     DATE           NULL,
    [sysVersionId]   ROWVERSION     NOT NULL,
    [sysAppName]     NVARCHAR (255) NOT NULL,
    [sysUserName]    NVARCHAR (255) NOT NULL,
    [sysStartTime]   DATETIME2 (7)  NOT NULL,
    [sysEndTime]     DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[quoteChg].[ix_quoteChg]...';


GO
CREATE CLUSTERED INDEX [ix_quoteChg]
    ON [dbo].[quoteChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[quoteDescriptChg]...';


GO
CREATE TABLE [dbo].[quoteDescriptChg] (
    [quoteId]         INT            NOT NULL,
    [name]            NVARCHAR (255) NOT NULL,
    [SEDOL]           CHAR (7)       NULL,
    [RIC]             VARCHAR (38)   NOT NULL,
    [bloombergTicker] VARCHAR (38)   NOT NULL,
    [ticker]          VARCHAR (38)   NOT NULL,
    [currencyCode]    CHAR (3)       NOT NULL,
    [exchangeId]      INT            NOT NULL,
    [validFrom]       DATE           NOT NULL,
    [validTo]         DATE           NOT NULL,
    [sysVersionId]    ROWVERSION     NOT NULL,
    [sysAppName]      NVARCHAR (128) NOT NULL,
    [sysUserName]     NVARCHAR (128) NOT NULL,
    [sysStartTime]    DATETIME2 (7)  NOT NULL,
    [sysEndTime]      DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[quoteDescriptChg].[ix_quoteDescriptChg]...';


GO
CREATE CLUSTERED INDEX [ix_quoteDescriptChg]
    ON [dbo].[quoteDescriptChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[quotePriceChg]...';


GO
CREATE TABLE [dbo].[quotePriceChg] (
    [quoteId]      INT            NOT NULL,
    [date]         DATE           NOT NULL,
    [close_]       FLOAT (53)     NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[quotePriceChg].[ix_quotePriceChg]...';


GO
CREATE CLUSTERED INDEX [ix_quotePriceChg]
    ON [dbo].[quotePriceChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[reviewCalendarChg]...';


GO
CREATE TABLE [dbo].[reviewCalendarChg] (
    [id]           INT            NOT NULL,
    [code]         NVARCHAR (128) NOT NULL,
    [name]         NVARCHAR (255) NOT NULL,
    [descript]     NVARCHAR (MAX) NULL,
    [sysVersionId] ROWVERSION     NOT NULL,
    [sysAppName]   NVARCHAR (255) NOT NULL,
    [sysUserName]  NVARCHAR (255) NOT NULL,
    [sysStartTime] DATETIME2 (7)  NOT NULL,
    [sysEndTime]   DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[reviewCalendarChg].[ix_reviewCalendarChg]...';


GO
CREATE CLUSTERED INDEX [ix_reviewCalendarChg]
    ON [dbo].[reviewCalendarChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[reviewPeriodChg]...';


GO
CREATE TABLE [dbo].[reviewPeriodChg] (
    [id]               INT            NOT NULL,
    [reviewCalendarId] INT            NOT NULL,
    [validFrom]        DATE           NOT NULL,
    [validTo]          DATE           NOT NULL,
    [sysVersionId]     ROWVERSION     NOT NULL,
    [sysAppName]       NVARCHAR (255) NOT NULL,
    [sysUserName]      NVARCHAR (255) NOT NULL,
    [sysStartTime]     DATETIME2 (7)  NOT NULL,
    [sysEndTime]       DATETIME2 (7)  NOT NULL
);


GO
PRINT N'Creating [dbo].[reviewPeriodChg].[ix_reviewPeriodChg]...';


GO
CREATE CLUSTERED INDEX [ix_reviewPeriodChg]
    ON [dbo].[reviewPeriodChg]([sysEndTime] ASC, [sysStartTime] ASC);


GO
PRINT N'Creating [dbo].[calculationCalendar]...';


GO
CREATE TABLE [dbo].[calculationCalendar] (
    [id]           INT                                         IDENTITY (1, 1) NOT NULL,
    [code]         NVARCHAR (128)                              NOT NULL,
    [name]         NVARCHAR (255)                              NOT NULL,
    [descript]     NVARCHAR (MAX)                              NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    UNIQUE NONCLUSTERED ([code] ASC),
    UNIQUE NONCLUSTERED ([name] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[calculationCalendarChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[calculationHoliday]...';


GO
CREATE TABLE [dbo].[calculationHoliday] (
    [calculationCalendarId] INT                                         NOT NULL,
    [date]                  DATE                                        NOT NULL,
    [descript]              NVARCHAR (255)                              NOT NULL,
    [sysVersionId]          ROWVERSION                                  NOT NULL,
    [sysAppName]            NVARCHAR (128)                              NOT NULL,
    [sysUserName]           NVARCHAR (128)                              NOT NULL,
    [sysStartTime]          DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]            DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_calculationHoliday] PRIMARY KEY CLUSTERED ([date] ASC, [calculationCalendarId] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[calculationHolidayChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[currencyHoliday]...';


GO
CREATE TABLE [dbo].[currencyHoliday] (
    [currencyRateTypeId] INT                                         NOT NULL,
    [date]               DATE                                        NOT NULL,
    [descript]           NVARCHAR (255)                              NOT NULL,
    [sysVersionId]       ROWVERSION                                  NOT NULL,
    [sysAppName]         NVARCHAR (128)                              NOT NULL,
    [sysUserName]        NVARCHAR (128)                              NOT NULL,
    [sysStartTime]       DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]         DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_currencyHoliday] PRIMARY KEY CLUSTERED ([date] ASC, [currencyRateTypeId] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[currencyHolidayChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[currencyPeriod]...';


GO
CREATE TABLE [dbo].[currencyPeriod] (
    [currencyRateTypeId] INT                                         NOT NULL,
    [date]               DATE                                        NOT NULL,
    [dateUTC]            DATETIME                                    NOT NULL,
    [nextDate]           DATE                                        NOT NULL,
    [nextDateUTC]        DATETIME                                    NOT NULL,
    [prevDate]           DATE                                        NOT NULL,
    [prevDateUTC]        DATETIME                                    NOT NULL,
    [sysVersionId]       ROWVERSION                                  NOT NULL,
    [sysAppName]         NVARCHAR (128)                              NOT NULL,
    [sysUserName]        NVARCHAR (128)                              NOT NULL,
    [sysStartTime]       DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]         DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_currencyPeriod] PRIMARY KEY CLUSTERED ([date] ASC, [currencyRateTypeId] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[currencyPeriodChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[currencyRate]...';


GO
CREATE TABLE [dbo].[currencyRate] (
    [currencyRateTypeId] INT                                         NOT NULL,
    [toCode]             CHAR (3)                                    NOT NULL,
    [date]               DATE                                        NOT NULL,
    [rate]               FLOAT (53)                                  NOT NULL,
    [sysVersionId]       ROWVERSION                                  NOT NULL,
    [sysAppName]         NVARCHAR (255)                              NOT NULL,
    [sysUserName]        NVARCHAR (255)                              NOT NULL,
    [sysStartTime]       DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]         DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_currencyRate] PRIMARY KEY CLUSTERED ([currencyRateTypeId] ASC, [date] ASC, [toCode] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[currencyRateChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[currencyRateType]...';


GO
CREATE TABLE [dbo].[currencyRateType] (
    [id]           INT                                         IDENTITY (1, 1) NOT NULL,
    [code]         NVARCHAR (128)                              NOT NULL,
    [baseCode]     CHAR (3)                                    NOT NULL,
    [name]         NVARCHAR (128)                              NOT NULL,
    [timeZone]     NVARCHAR (128)                              NOT NULL,
    [descript]     NVARCHAR (255)                              NOT NULL,
    [validFrom]    DATE                                        NOT NULL,
    [validTo]      DATE                                        NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (128)                              NOT NULL,
    [sysUserName]  NVARCHAR (128)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_currencyRateType] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [UQ_currencyRateTypeCode] UNIQUE NONCLUSTERED ([code] ASC),
    CONSTRAINT [UQ_currencyRateTypeName] UNIQUE NONCLUSTERED ([name] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[currencyRateTypeChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[currencyRateType].[IX_currencyRateType]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_currencyRateType]
    ON [dbo].[currencyRateType]([code] ASC, [baseCode] ASC);


GO
PRINT N'Creating [dbo].[currencyTimeTable]...';


GO
CREATE TABLE [dbo].[currencyTimeTable] (
    [currencyRateTypeId] INT                                         NOT NULL,
    [weekDay]            NVARCHAR (12)                               NOT NULL,
    [closeTimeLocal]     TIME (7)                                    NOT NULL,
    [validFrom]          DATE                                        NOT NULL,
    [validTo]            DATE                                        NOT NULL,
    [sysVersionId]       ROWVERSION                                  NOT NULL,
    [sysAppName]         NVARCHAR (255)                              NOT NULL,
    [sysUserName]        NVARCHAR (255)                              NOT NULL,
    [sysStartTime]       DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]         DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_currencyTimeTable] PRIMARY KEY CLUSTERED ([currencyRateTypeId] ASC, [weekDay] ASC, [validFrom] ASC),
    CONSTRAINT [UQ__currency__F2694849D40D825A] UNIQUE NONCLUSTERED ([currencyRateTypeId] ASC, [weekDay] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[currencyTimeTableChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[exchange]...';


GO
CREATE TABLE [dbo].[exchange] (
    [id]           INT                                         IDENTITY (1, 1) NOT NULL,
    [code]         VARCHAR (12)                                NOT NULL,
    [validFrom]    DATE                                        NOT NULL,
    [validTo]      DATE                                        NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_exchange] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [UQ__exchange__357D4CF9482BED66] UNIQUE NONCLUSTERED ([code] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[exchangeChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[exchangeDescript]...';


GO
CREATE TABLE [dbo].[exchangeDescript] (
    [exchangeId]   INT                                         NOT NULL,
    [name]         NVARCHAR (255)                              NOT NULL,
    [countryCode]  CHAR (2)                                    NOT NULL,
    [timeZone]     VARCHAR (55)                                NOT NULL,
    [validFrom]    DATE                                        NOT NULL,
    [validTo]      DATE                                        NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_exchangeDescript] PRIMARY KEY CLUSTERED ([exchangeId] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[exchangeDescriptChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[exchangeHoliday]...';


GO
CREATE TABLE [dbo].[exchangeHoliday] (
    [exchangeId]   INT                                         NOT NULL,
    [date]         DATE                                        NOT NULL,
    [descript]     NVARCHAR (255)                              NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (128)                              NOT NULL,
    [sysUserName]  NVARCHAR (128)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_exchangeHoliday] PRIMARY KEY CLUSTERED ([date] ASC, [exchangeId] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[exchangeHolidayChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[exchangePeriod]...';


GO
CREATE TABLE [dbo].[exchangePeriod] (
    [exchangeId]   INT                                         NOT NULL,
    [date]         DATE                                        NOT NULL,
    [dateUTC]      DATETIME                                    NOT NULL,
    [nextDate]     DATE                                        NOT NULL,
    [nextDateUTC]  DATETIME                                    NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (128)                              NOT NULL,
    [sysUserName]  NVARCHAR (128)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_exchangePeriod] PRIMARY KEY CLUSTERED ([date] ASC, [exchangeId] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[exchangePeriodChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[exchangePeriod].[IX_exchangePeriod]...';


GO
CREATE NONCLUSTERED INDEX [IX_exchangePeriod]
    ON [dbo].[exchangePeriod]([dateUTC] ASC, [nextDateUTC] ASC)
    INCLUDE([exchangeId], [date]);


GO
PRINT N'Creating [dbo].[exchangePeriod].[UIX_exchangePeriod]...';


GO
CREATE NONCLUSTERED INDEX [UIX_exchangePeriod]
    ON [dbo].[exchangePeriod]([exchangeId] ASC, [dateUTC] ASC, [nextDateUTC] ASC);


GO
PRINT N'Creating [dbo].[exchangeTimeTable]...';


GO
CREATE TABLE [dbo].[exchangeTimeTable] (
    [exchangeId]     INT                                         NOT NULL,
    [weekDay]        NVARCHAR (12)                               NOT NULL,
    [closeTimeLocal] TIME (7)                                    NOT NULL,
    [validFrom]      DATE                                        NOT NULL,
    [validTo]        DATE                                        NOT NULL,
    [sysVersionId]   ROWVERSION                                  NOT NULL,
    [sysAppName]     NVARCHAR (255)                              NOT NULL,
    [sysUserName]    NVARCHAR (255)                              NOT NULL,
    [sysStartTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]     DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_exchangeTimeTable] PRIMARY KEY CLUSTERED ([exchangeId] ASC, [weekDay] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[exchangeTimeTableChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[index]...';


GO
CREATE TABLE [dbo].[index] (
    [id]           INT                                         IDENTITY (1, 1) NOT NULL,
    [code]         NVARCHAR (128)                              NOT NULL,
    [portfolioId]  INT                                         NOT NULL,
    [baseDate]     DATE                                        NOT NULL,
    [baseValue]    FLOAT (53)                                  NOT NULL,
    [launchDate]   DATE                                        NOT NULL,
    [delistDate]   DATE                                        NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    UNIQUE NONCLUSTERED ([code] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[indexChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[indexDescript]...';


GO
CREATE TABLE [dbo].[indexDescript] (
    [id]              INT                                         IDENTITY (1, 1) NOT NULL,
    [indexId]         INT                                         NOT NULL,
    [name]            NVARCHAR (255)                              NOT NULL,
    [ISIN]            CHAR (12)                                   NULL,
    [SEDOL]           CHAR (7)                                    NULL,
    [RIC]             VARCHAR (38)                                NOT NULL,
    [bloombergTicker] VARCHAR (38)                                NOT NULL,
    [currencyCode]    CHAR (3)                                    NOT NULL,
    [replCost]        NUMERIC (38, 15)                            NOT NULL,
    [validFrom]       DATE                                        NOT NULL,
    [validTo]         DATE                                        NOT NULL,
    [sysVersionId]    ROWVERSION                                  NOT NULL,
    [sysAppName]      NVARCHAR (128)                              NOT NULL,
    [sysUserName]     NVARCHAR (128)                              NOT NULL,
    [sysStartTime]    DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]      DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_indexDescript] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [UQ_indexDescript] UNIQUE NONCLUSTERED ([indexId] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[indexDescriptChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[indexValue]...';


GO
CREATE TABLE [dbo].[indexValue] (
    [indexId]       INT                                         NOT NULL,
    [date]          DATE                                        NOT NULL,
    [cumCostFactor] FLOAT (53)                                  NOT NULL,
    [value]         FLOAT (53)                                  NOT NULL,
    [sysVersionId]  ROWVERSION                                  NOT NULL,
    [sysAppName]    NVARCHAR (255)                              NOT NULL,
    [sysUserName]   NVARCHAR (255)                              NOT NULL,
    [sysStartTime]  DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]    DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_indexValue] PRIMARY KEY CLUSTERED ([date] ASC, [indexId] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[indexValueChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[issue]...';


GO
CREATE TABLE [dbo].[issue] (
    [id]           INT                                         IDENTITY (1, 1) NOT NULL,
    [code]         NVARCHAR (128)                              NOT NULL,
    [issuerId]     INT                                         NOT NULL,
    [type]         NVARCHAR (128)                              NOT NULL,
    [class]        NVARCHAR (128)                              NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    UNIQUE NONCLUSTERED ([code] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[issueChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[issueDescript]...';


GO
CREATE TABLE [dbo].[issueDescript] (
    [issueId]      INT                                         NOT NULL,
    [name]         NVARCHAR (255)                              NOT NULL,
    [ISIN]         CHAR (12)                                   NULL,
    [validFrom]    DATE                                        NOT NULL,
    [validTo]      DATE                                        NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_issueDescript] PRIMARY KEY CLUSTERED ([issueId] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[issueDescriptChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[issuer]...';


GO
CREATE TABLE [dbo].[issuer] (
    [id]           INT                                         IDENTITY (1, 1) NOT NULL,
    [code]         NVARCHAR (128)                              NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    UNIQUE NONCLUSTERED ([code] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[issuerChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[issuerDescript]...';


GO
CREATE TABLE [dbo].[issuerDescript] (
    [issuerId]     INT                                         NOT NULL,
    [name]         NVARCHAR (255)                              NOT NULL,
    [industryCode] VARCHAR (25)                                NULL,
    [countryCode]  CHAR (2)                                    NULL,
    [validFrom]    DATE                                        NOT NULL,
    [validTo]      DATE                                        NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_issuerDescript] PRIMARY KEY CLUSTERED ([issuerId] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[issuerDescriptChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[portfolio]...';


GO
CREATE TABLE [dbo].[portfolio] (
    [id]           INT                                         IDENTITY (1, 1) NOT NULL,
    [code]         NVARCHAR (128)                              NOT NULL,
    [name]         NVARCHAR (128)                              NOT NULL,
    [validFrom]    DATE                                        NOT NULL,
    [validTo]      DATE                                        NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_portfolio] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [UQ_portfolio] UNIQUE NONCLUSTERED ([code] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[portfolioChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[portfolio].[IX_portfolio]...';


GO
CREATE NONCLUSTERED INDEX [IX_portfolio]
    ON [dbo].[portfolio]([validFrom] ASC, [validTo] ASC);


GO
PRINT N'Creating [dbo].[portfolioConfig]...';


GO
CREATE TABLE [dbo].[portfolioConfig] (
    [portfolioId]           INT                                         NOT NULL,
    [calculationCalendarId] INT                                         NOT NULL,
    [reviewCalendarId]      INT                                         NOT NULL,
    [currencyRateTypeId]    INT                                         NOT NULL,
    [valuationTimeZone]     NVARCHAR (128)                              NOT NULL,
    [validFrom]             DATE                                        NOT NULL,
    [validTo]               DATE                                        NOT NULL,
    [sysVersionId]          ROWVERSION                                  NOT NULL,
    [sysAppName]            NVARCHAR (255)                              NOT NULL,
    [sysUserName]           NVARCHAR (255)                              NOT NULL,
    [sysStartTime]          DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]            DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_portfolioConfig] PRIMARY KEY CLUSTERED ([portfolioId] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[portfolioConfigChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[portfolioCons]...';


GO
CREATE TABLE [dbo].[portfolioCons] (
    [portfolioId]  INT                                         NOT NULL,
    [quoteId]      INT                                         NOT NULL,
    [validFrom]    DATE                                        NOT NULL,
    [validTo]      DATE                                        NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_portfolioCons] PRIMARY KEY CLUSTERED ([portfolioId] ASC, [quoteId] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[portfolioConsChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[portfolioEvent]...';


GO
CREATE TABLE [dbo].[portfolioEvent] (
    [id]                    INT                                         IDENTITY (1, 1) NOT NULL,
    [portfolioId]           INT                                         NOT NULL,
    [quoteId]               INT                                         NOT NULL,
    [effectiveDate]         DATE                                        NOT NULL,
    [actionType]            VARCHAR (128)                               NOT NULL,
    [currencyCode]          CHAR (3)                                    NULL,
    [formula_openPrice]     NVARCHAR (MAX)                              NULL,
    [formula_openShares]    NVARCHAR (MAX)                              NULL,
    [formula_openFreefloat] NVARCHAR (MAX)                              NULL,
    [formula_parameter]     NVARCHAR (MAX)                              NULL,
    [sysVersionId]          ROWVERSION                                  NOT NULL,
    [sysAppName]            NVARCHAR (255)                              NOT NULL,
    [sysUserName]           NVARCHAR (255)                              NOT NULL,
    [sysStartTime]          DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]            DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_portfolioEvent] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [UQ_portfolioEvent] UNIQUE NONCLUSTERED ([portfolioId] ASC, [quoteId] ASC, [effectiveDate] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[portfolioEventChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[portfolioEvent].[IX_portfolioEvent]...';


GO
CREATE NONCLUSTERED INDEX [IX_portfolioEvent]
    ON [dbo].[portfolioEvent]([effectiveDate] ASC, [portfolioId] ASC, [actionType] ASC);


GO
PRINT N'Creating [dbo].[portfolioEventResult]...';


GO
CREATE TABLE [dbo].[portfolioEventResult] (
    [portfolioEventId]    INT                                         NOT NULL,
    [priceCurrencyCode]   CHAR (3)                                    NULL,
    [closePrice]          FLOAT (53)                                  NULL,
    [closeCurrencyRate]   FLOAT (53)                                  NULL,
    [closeShareFactor]    FLOAT (53)                                  NULL,
    [closeFreefloat]      FLOAT (53)                                  NULL,
    [openShareFactor]     FLOAT (53)                                  NULL,
    [openFreefloatFactor] FLOAT (53)                                  NULL,
    [openPrice]           FLOAT (53)                                  NULL,
    [sysVersionId]        ROWVERSION                                  NOT NULL,
    [sysAppName]          NVARCHAR (255)                              NOT NULL,
    [sysUserName]         NVARCHAR (255)                              NOT NULL,
    [sysStartTime]        DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]          DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_portfolioEventResult_1] PRIMARY KEY CLUSTERED ([portfolioEventId] ASC),
    CONSTRAINT [UQ_portfolioEventResult] UNIQUE NONCLUSTERED ([portfolioEventId] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[portfolioEventResultChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[portfolioTimeTable]...';


GO
CREATE TABLE [dbo].[portfolioTimeTable] (
    [portfolioId]        INT                                         NOT NULL,
    [weekDay]            NVARCHAR (12)                               NOT NULL,
    [valuationTimeLocal] TIME (7)                                    NOT NULL,
    [validFrom]          DATE                                        NOT NULL,
    [validTo]            DATE                                        NOT NULL,
    [sysVersionId]       ROWVERSION                                  NOT NULL,
    [sysAppName]         NVARCHAR (255)                              NOT NULL,
    [sysUserName]        NVARCHAR (255)                              NOT NULL,
    [sysStartTime]       DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]         DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_portfolioTimeTable] PRIMARY KEY CLUSTERED ([portfolioId] ASC, [weekDay] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[portfolioTimeTableChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[portfolioValue]...';


GO
CREATE TABLE [dbo].[portfolioValue] (
    [portfolioId]  INT                                         NOT NULL,
    [date]         DATE                                        NOT NULL,
    [openMcap]     FLOAT (53)                                  NOT NULL,
    [closeMcap]    FLOAT (53)                                  NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_portfolioValue] PRIMARY KEY CLUSTERED ([portfolioId] ASC, [date] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[portfolioValueChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[portfolioValue].[UIX_vw_portfolioValue]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [UIX_vw_portfolioValue]
    ON [dbo].[portfolioValue]([date] ASC, [portfolioId] ASC)
    INCLUDE([openMcap], [closeMcap]);


GO
PRINT N'Creating [dbo].[portfolioValuePeriod]...';


GO
CREATE TABLE [dbo].[portfolioValuePeriod] (
    [portfolioId]  INT                                         NOT NULL,
    [date]         DATE                                        NOT NULL,
    [dateUTC]      DATETIME                                    NOT NULL,
    [nextDate]     DATE                                        NOT NULL,
    [nextDateUTC]  DATETIME                                    NOT NULL,
    [prevDate]     DATE                                        NOT NULL,
    [prevDateUTC]  DATETIME                                    NOT NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (128)                              NOT NULL,
    [sysUserName]  NVARCHAR (128)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_portfolioValuePeriod] PRIMARY KEY CLUSTERED ([portfolioId] ASC, [date] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[portfolioValuePeriodChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[portfolioValuePeriod].[UIX_portfolioValuePeriod]...';


GO
CREATE NONCLUSTERED INDEX [UIX_portfolioValuePeriod]
    ON [dbo].[portfolioValuePeriod]([date] ASC, [prevDate] ASC, [portfolioId] ASC)
    INCLUDE([dateUTC], [nextDate], [nextDateUTC], [prevDateUTC]);


GO
PRINT N'Creating [dbo].[quote]...';


GO
CREATE TABLE [dbo].[quote] (
    [id]             INT                                         IDENTITY (1, 1) NOT NULL,
    [code]           NVARCHAR (128)                              NOT NULL,
    [issueId]        INT                                         NOT NULL,
    [firstTradeDate] DATE                                        NOT NULL,
    [delistDate]     DATE                                        NULL,
    [sysVersionId]   ROWVERSION                                  NOT NULL,
    [sysAppName]     NVARCHAR (255)                              NOT NULL,
    [sysUserName]    NVARCHAR (255)                              NOT NULL,
    [sysStartTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]     DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK__quote__3213E83F58625685] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [UQ__quote__357D4CF9AC84145D] UNIQUE NONCLUSTERED ([code] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[quoteChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[quoteDescript]...';


GO
CREATE TABLE [dbo].[quoteDescript] (
    [quoteId]         INT                                         NOT NULL,
    [name]            NVARCHAR (255)                              NOT NULL,
    [SEDOL]           CHAR (7)                                    NULL,
    [RIC]             VARCHAR (38)                                NOT NULL,
    [bloombergTicker] VARCHAR (38)                                NOT NULL,
    [ticker]          VARCHAR (38)                                NOT NULL,
    [currencyCode]    CHAR (3)                                    NOT NULL,
    [exchangeId]      INT                                         NOT NULL,
    [validFrom]       DATE                                        NOT NULL,
    [validTo]         DATE                                        NOT NULL,
    [sysVersionId]    ROWVERSION                                  NOT NULL,
    [sysAppName]      NVARCHAR (128)                              NOT NULL,
    [sysUserName]     NVARCHAR (128)                              NOT NULL,
    [sysStartTime]    DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]      DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_quoteDescript] PRIMARY KEY CLUSTERED ([quoteId] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[quoteDescriptChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[quoteDescript].[IX_quoteDescript]...';


GO
CREATE NONCLUSTERED INDEX [IX_quoteDescript]
    ON [dbo].[quoteDescript]([exchangeId] ASC, [quoteId] ASC);


GO
PRINT N'Creating [dbo].[quotePrice]...';


GO
CREATE TABLE [dbo].[quotePrice] (
    [quoteId]      INT                                         NOT NULL,
    [date]         DATE                                        NOT NULL,
    [close_]       FLOAT (53)                                  NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_quotePrice] PRIMARY KEY CLUSTERED ([quoteId] ASC, [date] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[quotePriceChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[reviewCalendar]...';


GO
CREATE TABLE [dbo].[reviewCalendar] (
    [id]           INT                                         IDENTITY (1, 1) NOT NULL,
    [code]         NVARCHAR (128)                              NOT NULL,
    [name]         NVARCHAR (255)                              NOT NULL,
    [descript]     NVARCHAR (MAX)                              NULL,
    [sysVersionId] ROWVERSION                                  NOT NULL,
    [sysAppName]   NVARCHAR (255)                              NOT NULL,
    [sysUserName]  NVARCHAR (255)                              NOT NULL,
    [sysStartTime] DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]   DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC),
    UNIQUE NONCLUSTERED ([code] ASC),
    UNIQUE NONCLUSTERED ([name] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[reviewCalendarChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating [dbo].[reviewPeriod]...';


GO
CREATE TABLE [dbo].[reviewPeriod] (
    [id]               INT                                         IDENTITY (1, 1) NOT NULL,
    [reviewCalendarId] INT                                         NOT NULL,
    [validFrom]        DATE                                        NOT NULL,
    [validTo]          DATE                                        NOT NULL,
    [sysVersionId]     ROWVERSION                                  NOT NULL,
    [sysAppName]       NVARCHAR (255)                              NOT NULL,
    [sysUserName]      NVARCHAR (255)                              NOT NULL,
    [sysStartTime]     DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [sysEndTime]       DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_reviewPeriod] PRIMARY KEY CLUSTERED ([id] ASC),
    CONSTRAINT [UQ_reviewPeriod] UNIQUE NONCLUSTERED ([reviewCalendarId] ASC, [validFrom] ASC),
    PERIOD FOR SYSTEM_TIME ([sysStartTime], [sysEndTime])
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[dbo].[reviewPeriodChg], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating unnamed constraint on [dbo].[calculationCalendar]...';


GO
ALTER TABLE [dbo].[calculationCalendar]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[calculationCalendar]...';


GO
ALTER TABLE [dbo].[calculationCalendar]
    ADD DEFAULT (user_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_calculationCalendar_sysStartTime]...';


GO
ALTER TABLE [dbo].[calculationCalendar]
    ADD CONSTRAINT [DF_dbo_calculationCalendar_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_calculationCalendar_sysEndTime]...';


GO
ALTER TABLE [dbo].[calculationCalendar]
    ADD CONSTRAINT [DF_dbo_calculationCalendar_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[calculationHoliday]...';


GO
ALTER TABLE [dbo].[calculationHoliday]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[calculationHoliday]...';


GO
ALTER TABLE [dbo].[calculationHoliday]
    ADD DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_calculationHoliday_sysStartTime]...';


GO
ALTER TABLE [dbo].[calculationHoliday]
    ADD CONSTRAINT [DF_dbo_calculationHoliday_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_calculationHoliday_sysEndTime]...';


GO
ALTER TABLE [dbo].[calculationHoliday]
    ADD CONSTRAINT [DF_dbo_calculationHoliday_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[currencyHoliday]...';


GO
ALTER TABLE [dbo].[currencyHoliday]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[currencyHoliday]...';


GO
ALTER TABLE [dbo].[currencyHoliday]
    ADD DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyHoliday_sysStartTime]...';


GO
ALTER TABLE [dbo].[currencyHoliday]
    ADD CONSTRAINT [DF_dbo_currencyHoliday_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyHoliday_sysEndTime]...';


GO
ALTER TABLE [dbo].[currencyHoliday]
    ADD CONSTRAINT [DF_dbo_currencyHoliday_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__currencyP__sysAp__4AB81AF0]...';


GO
ALTER TABLE [dbo].[currencyPeriod]
    ADD CONSTRAINT [DF__currencyP__sysAp__4AB81AF0] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__currencyP__sysUs__4BAC3F29]...';


GO
ALTER TABLE [dbo].[currencyPeriod]
    ADD CONSTRAINT [DF__currencyP__sysUs__4BAC3F29] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyPeriod_sysStartTime]...';


GO
ALTER TABLE [dbo].[currencyPeriod]
    ADD CONSTRAINT [DF_dbo_currencyPeriod_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyPeriod_sysEndTime]...';


GO
ALTER TABLE [dbo].[currencyPeriod]
    ADD CONSTRAINT [DF_dbo_currencyPeriod_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF_currencyRate_currencyRateType]...';


GO
ALTER TABLE [dbo].[currencyRate]
    ADD CONSTRAINT [DF_currencyRate_currencyRateType] DEFAULT ((1)) FOR [currencyRateTypeId];


GO
PRINT N'Creating [dbo].[DF_currencyRate_sysAppName]...';


GO
ALTER TABLE [dbo].[currencyRate]
    ADD CONSTRAINT [DF_currencyRate_sysAppName] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF_currencyRate_sysUserName]...';


GO
ALTER TABLE [dbo].[currencyRate]
    ADD CONSTRAINT [DF_currencyRate_sysUserName] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyRate_sysStartTime]...';


GO
ALTER TABLE [dbo].[currencyRate]
    ADD CONSTRAINT [DF_dbo_currencyRate_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyRate_sysEndTime]...';


GO
ALTER TABLE [dbo].[currencyRate]
    ADD CONSTRAINT [DF_dbo_currencyRate_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF_currencyRateType_baseCode]...';


GO
ALTER TABLE [dbo].[currencyRateType]
    ADD CONSTRAINT [DF_currencyRateType_baseCode] DEFAULT ('EUR') FOR [baseCode];


GO
PRINT N'Creating [dbo].[DF__currency__sysApp__6991A7CB]...';


GO
ALTER TABLE [dbo].[currencyRateType]
    ADD CONSTRAINT [DF__currency__sysApp__6991A7CB] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__currency__sysUse__6A85CC04]...';


GO
ALTER TABLE [dbo].[currencyRateType]
    ADD CONSTRAINT [DF__currency__sysUse__6A85CC04] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyRateType_sysStartTime]...';


GO
ALTER TABLE [dbo].[currencyRateType]
    ADD CONSTRAINT [DF_dbo_currencyRateType_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyRateType_sysEndTime]...';


GO
ALTER TABLE [dbo].[currencyRateType]
    ADD CONSTRAINT [DF_dbo_currencyRateType_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__currencyT__sysAp__3D2915A8]...';


GO
ALTER TABLE [dbo].[currencyTimeTable]
    ADD CONSTRAINT [DF__currencyT__sysAp__3D2915A8] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__currencyT__sysUs__3E1D39E1]...';


GO
ALTER TABLE [dbo].[currencyTimeTable]
    ADD CONSTRAINT [DF__currencyT__sysUs__3E1D39E1] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyTimeTable_sysStartTime]...';


GO
ALTER TABLE [dbo].[currencyTimeTable]
    ADD CONSTRAINT [DF_dbo_currencyTimeTable_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_currencyTimeTable_sysEndTime]...';


GO
ALTER TABLE [dbo].[currencyTimeTable]
    ADD CONSTRAINT [DF_dbo_currencyTimeTable_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__exchange__sysApp__2180FB33]...';


GO
ALTER TABLE [dbo].[exchange]
    ADD CONSTRAINT [DF__exchange__sysApp__2180FB33] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__exchange__sysUse__22751F6C]...';


GO
ALTER TABLE [dbo].[exchange]
    ADD CONSTRAINT [DF__exchange__sysUse__22751F6C] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_exchange_sysStartTime]...';


GO
ALTER TABLE [dbo].[exchange]
    ADD CONSTRAINT [DF_dbo_exchange_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_exchange_sysEndTime]...';


GO
ALTER TABLE [dbo].[exchange]
    ADD CONSTRAINT [DF_dbo_exchange_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[exchangeDescript]...';


GO
ALTER TABLE [dbo].[exchangeDescript]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[exchangeDescript]...';


GO
ALTER TABLE [dbo].[exchangeDescript]
    ADD DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_exchangeDescript_sysStartTime]...';


GO
ALTER TABLE [dbo].[exchangeDescript]
    ADD CONSTRAINT [DF_dbo_exchangeDescript_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_exchangeDescript_sysEndTime]...';


GO
ALTER TABLE [dbo].[exchangeDescript]
    ADD CONSTRAINT [DF_dbo_exchangeDescript_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[exchangeHoliday]...';


GO
ALTER TABLE [dbo].[exchangeHoliday]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[exchangeHoliday]...';


GO
ALTER TABLE [dbo].[exchangeHoliday]
    ADD DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_exchangeHoliday_sysStartTime]...';


GO
ALTER TABLE [dbo].[exchangeHoliday]
    ADD CONSTRAINT [DF_dbo_exchangeHoliday_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_exchangeHoliday_sysEndTime]...';


GO
ALTER TABLE [dbo].[exchangeHoliday]
    ADD CONSTRAINT [DF_dbo_exchangeHoliday_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF_exchangePeriod_dateUTC]...';


GO
ALTER TABLE [dbo].[exchangePeriod]
    ADD CONSTRAINT [DF_exchangePeriod_dateUTC] DEFAULT (getdate()) FOR [dateUTC];


GO
PRINT N'Creating [dbo].[DF_exchangePeriod_nextDateUTC]...';


GO
ALTER TABLE [dbo].[exchangePeriod]
    ADD CONSTRAINT [DF_exchangePeriod_nextDateUTC] DEFAULT (getdate()) FOR [nextDateUTC];


GO
PRINT N'Creating [dbo].[DF__exchangeP__sysAp__4AB81AF0]...';


GO
ALTER TABLE [dbo].[exchangePeriod]
    ADD CONSTRAINT [DF__exchangeP__sysAp__4AB81AF0] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__exchangeP__sysUs__4BAC3F29]...';


GO
ALTER TABLE [dbo].[exchangePeriod]
    ADD CONSTRAINT [DF__exchangeP__sysUs__4BAC3F29] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_exchangePeriod_sysStartTime]...';


GO
ALTER TABLE [dbo].[exchangePeriod]
    ADD CONSTRAINT [DF_dbo_exchangePeriod_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_exchangePeriod_sysEndTime]...';


GO
ALTER TABLE [dbo].[exchangePeriod]
    ADD CONSTRAINT [DF_dbo_exchangePeriod_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__exchangeT__sysAp__3D2915A8]...';


GO
ALTER TABLE [dbo].[exchangeTimeTable]
    ADD CONSTRAINT [DF__exchangeT__sysAp__3D2915A8] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__exchangeT__sysUs__3E1D39E1]...';


GO
ALTER TABLE [dbo].[exchangeTimeTable]
    ADD CONSTRAINT [DF__exchangeT__sysUs__3E1D39E1] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_exchangeTimeTable_sysStartTime]...';


GO
ALTER TABLE [dbo].[exchangeTimeTable]
    ADD CONSTRAINT [DF_dbo_exchangeTimeTable_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_exchangeTimeTable_sysEndTime]...';


GO
ALTER TABLE [dbo].[exchangeTimeTable]
    ADD CONSTRAINT [DF_dbo_exchangeTimeTable_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[index]...';


GO
ALTER TABLE [dbo].[index]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[index]...';


GO
ALTER TABLE [dbo].[index]
    ADD DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_index_sysStartTime]...';


GO
ALTER TABLE [dbo].[index]
    ADD CONSTRAINT [DF_dbo_index_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_index_sysEndTime]...';


GO
ALTER TABLE [dbo].[index]
    ADD CONSTRAINT [DF_dbo_index_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF_indexDescript_sysAppName]...';


GO
ALTER TABLE [dbo].[indexDescript]
    ADD CONSTRAINT [DF_indexDescript_sysAppName] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF_indexDescript_sysUserName]...';


GO
ALTER TABLE [dbo].[indexDescript]
    ADD CONSTRAINT [DF_indexDescript_sysUserName] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_indexDescript_sysStartTime]...';


GO
ALTER TABLE [dbo].[indexDescript]
    ADD CONSTRAINT [DF_dbo_indexDescript_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_indexDescript_sysEndTime]...';


GO
ALTER TABLE [dbo].[indexDescript]
    ADD CONSTRAINT [DF_dbo_indexDescript_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[indexValue]...';


GO
ALTER TABLE [dbo].[indexValue]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[indexValue]...';


GO
ALTER TABLE [dbo].[indexValue]
    ADD DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_indexValue_sysStartTime]...';


GO
ALTER TABLE [dbo].[indexValue]
    ADD CONSTRAINT [DF_dbo_indexValue_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_indexValue_sysEndTime]...';


GO
ALTER TABLE [dbo].[indexValue]
    ADD CONSTRAINT [DF_dbo_indexValue_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[issue]...';


GO
ALTER TABLE [dbo].[issue]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[issue]...';


GO
ALTER TABLE [dbo].[issue]
    ADD DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_issue_sysStartTime]...';


GO
ALTER TABLE [dbo].[issue]
    ADD CONSTRAINT [DF_dbo_issue_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_issue_sysEndTime]...';


GO
ALTER TABLE [dbo].[issue]
    ADD CONSTRAINT [DF_dbo_issue_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[issueDescript]...';


GO
ALTER TABLE [dbo].[issueDescript]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[issueDescript]...';


GO
ALTER TABLE [dbo].[issueDescript]
    ADD DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_issueDescript_sysStartTime]...';


GO
ALTER TABLE [dbo].[issueDescript]
    ADD CONSTRAINT [DF_dbo_issueDescript_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_issueDescript_sysEndTime]...';


GO
ALTER TABLE [dbo].[issueDescript]
    ADD CONSTRAINT [DF_dbo_issueDescript_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[issuer]...';


GO
ALTER TABLE [dbo].[issuer]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[issuer]...';


GO
ALTER TABLE [dbo].[issuer]
    ADD DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_issuer_sysStartTime]...';


GO
ALTER TABLE [dbo].[issuer]
    ADD CONSTRAINT [DF_dbo_issuer_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_issuer_sysEndTime]...';


GO
ALTER TABLE [dbo].[issuer]
    ADD CONSTRAINT [DF_dbo_issuer_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__issuerDes__sysAp__52593CB8]...';


GO
ALTER TABLE [dbo].[issuerDescript]
    ADD CONSTRAINT [DF__issuerDes__sysAp__52593CB8] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__issuerDes__sysUs__534D60F1]...';


GO
ALTER TABLE [dbo].[issuerDescript]
    ADD CONSTRAINT [DF__issuerDes__sysUs__534D60F1] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_issuerDescript_sysStartTime]...';


GO
ALTER TABLE [dbo].[issuerDescript]
    ADD CONSTRAINT [DF_dbo_issuerDescript_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_issuerDescript_sysEndTime]...';


GO
ALTER TABLE [dbo].[issuerDescript]
    ADD CONSTRAINT [DF_dbo_issuerDescript_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF_portfolio_validFrom]...';


GO
ALTER TABLE [dbo].[portfolio]
    ADD CONSTRAINT [DF_portfolio_validFrom] DEFAULT ('1900-01-01') FOR [validFrom];


GO
PRINT N'Creating [dbo].[DF_portfolio_validTo]...';


GO
ALTER TABLE [dbo].[portfolio]
    ADD CONSTRAINT [DF_portfolio_validTo] DEFAULT ('9999-12-31') FOR [validTo];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysAp__69FBBC1F]...';


GO
ALTER TABLE [dbo].[portfolio]
    ADD CONSTRAINT [DF__portfolio__sysAp__69FBBC1F] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysUs__6AEFE058]...';


GO
ALTER TABLE [dbo].[portfolio]
    ADD CONSTRAINT [DF__portfolio__sysUs__6AEFE058] DEFAULT (user_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolio_sysStartTime]...';


GO
ALTER TABLE [dbo].[portfolio]
    ADD CONSTRAINT [DF_dbo_portfolio_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolio_sysEndTime]...';


GO
ALTER TABLE [dbo].[portfolio]
    ADD CONSTRAINT [DF_dbo_portfolio_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF_portfolioConfig_currencyRateTypeId]...';


GO
ALTER TABLE [dbo].[portfolioConfig]
    ADD CONSTRAINT [DF_portfolioConfig_currencyRateTypeId] DEFAULT ((1)) FOR [currencyRateTypeId];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysAp__2610A626]...';


GO
ALTER TABLE [dbo].[portfolioConfig]
    ADD CONSTRAINT [DF__portfolio__sysAp__2610A626] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysUs__2704CA5F]...';


GO
ALTER TABLE [dbo].[portfolioConfig]
    ADD CONSTRAINT [DF__portfolio__sysUs__2704CA5F] DEFAULT (user_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioConfig_sysStartTime]...';


GO
ALTER TABLE [dbo].[portfolioConfig]
    ADD CONSTRAINT [DF_dbo_portfolioConfig_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioConfig_sysEndTime]...';


GO
ALTER TABLE [dbo].[portfolioConfig]
    ADD CONSTRAINT [DF_dbo_portfolioConfig_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysAp__2F4FF79D]...';


GO
ALTER TABLE [dbo].[portfolioCons]
    ADD CONSTRAINT [DF__portfolio__sysAp__2F4FF79D] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysUs__30441BD6]...';


GO
ALTER TABLE [dbo].[portfolioCons]
    ADD CONSTRAINT [DF__portfolio__sysUs__30441BD6] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioCons_sysStartTime]...';


GO
ALTER TABLE [dbo].[portfolioCons]
    ADD CONSTRAINT [DF_dbo_portfolioCons_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioCons_sysEndTime]...';


GO
ALTER TABLE [dbo].[portfolioCons]
    ADD CONSTRAINT [DF_dbo_portfolioCons_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysAp__0E391C95]...';


GO
ALTER TABLE [dbo].[portfolioEvent]
    ADD CONSTRAINT [DF__portfolio__sysAp__0E391C95] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysUs__0F2D40CE]...';


GO
ALTER TABLE [dbo].[portfolioEvent]
    ADD CONSTRAINT [DF__portfolio__sysUs__0F2D40CE] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioEvent_sysStartTime]...';


GO
ALTER TABLE [dbo].[portfolioEvent]
    ADD CONSTRAINT [DF_dbo_portfolioEvent_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioEvent_sysEndTime]...';


GO
ALTER TABLE [dbo].[portfolioEvent]
    ADD CONSTRAINT [DF_dbo_portfolioEvent_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysAp__4A8310C6]...';


GO
ALTER TABLE [dbo].[portfolioEventResult]
    ADD CONSTRAINT [DF__portfolio__sysAp__4A8310C6] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysUs__4B7734FF]...';


GO
ALTER TABLE [dbo].[portfolioEventResult]
    ADD CONSTRAINT [DF__portfolio__sysUs__4B7734FF] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioEventResult_sysStartTime]...';


GO
ALTER TABLE [dbo].[portfolioEventResult]
    ADD CONSTRAINT [DF_dbo_portfolioEventResult_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioEventResult_sysEndTime]...';


GO
ALTER TABLE [dbo].[portfolioEventResult]
    ADD CONSTRAINT [DF_dbo_portfolioEventResult_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__portfolioT__sysAp__3D2915A8]...';


GO
ALTER TABLE [dbo].[portfolioTimeTable]
    ADD CONSTRAINT [DF__portfolioT__sysAp__3D2915A8] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__portfolioT__sysUs__3E1D39E1]...';


GO
ALTER TABLE [dbo].[portfolioTimeTable]
    ADD CONSTRAINT [DF__portfolioT__sysUs__3E1D39E1] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioTimeTable_sysStartTime]...';


GO
ALTER TABLE [dbo].[portfolioTimeTable]
    ADD CONSTRAINT [DF_dbo_portfolioTimeTable_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioTimeTable_sysEndTime]...';


GO
ALTER TABLE [dbo].[portfolioTimeTable]
    ADD CONSTRAINT [DF_dbo_portfolioTimeTable_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysAp__3BFFE745]...';


GO
ALTER TABLE [dbo].[portfolioValue]
    ADD CONSTRAINT [DF__portfolio__sysAp__3BFFE745] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysUs__3CF40B7E]...';


GO
ALTER TABLE [dbo].[portfolioValue]
    ADD CONSTRAINT [DF__portfolio__sysUs__3CF40B7E] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioValue_sysStartTime]...';


GO
ALTER TABLE [dbo].[portfolioValue]
    ADD CONSTRAINT [DF_dbo_portfolioValue_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioValue_sysEndTime]...';


GO
ALTER TABLE [dbo].[portfolioValue]
    ADD CONSTRAINT [DF_dbo_portfolioValue_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF_portfolioValuePeriod_prevDate]...';


GO
ALTER TABLE [dbo].[portfolioValuePeriod]
    ADD CONSTRAINT [DF_portfolioValuePeriod_prevDate] DEFAULT (getdate()) FOR [prevDate];


GO
PRINT N'Creating [dbo].[DF_portfolioValuePeriod_prevDateUTC]...';


GO
ALTER TABLE [dbo].[portfolioValuePeriod]
    ADD CONSTRAINT [DF_portfolioValuePeriod_prevDateUTC] DEFAULT (getdate()) FOR [prevDateUTC];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysAp__1F2E9E6D]...';


GO
ALTER TABLE [dbo].[portfolioValuePeriod]
    ADD CONSTRAINT [DF__portfolio__sysAp__1F2E9E6D] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__portfolio__sysUs__2022C2A6]...';


GO
ALTER TABLE [dbo].[portfolioValuePeriod]
    ADD CONSTRAINT [DF__portfolio__sysUs__2022C2A6] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioValuePeriod_sysStartTime]...';


GO
ALTER TABLE [dbo].[portfolioValuePeriod]
    ADD CONSTRAINT [DF_dbo_portfolioValuePeriod_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_portfolioValuePeriod_sysEndTime]...';


GO
ALTER TABLE [dbo].[portfolioValuePeriod]
    ADD CONSTRAINT [DF_dbo_portfolioValuePeriod_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__quote__sysAppNam__55F4C372]...';


GO
ALTER TABLE [dbo].[quote]
    ADD CONSTRAINT [DF__quote__sysAppNam__55F4C372] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__quote__sysUserNa__56E8E7AB]...';


GO
ALTER TABLE [dbo].[quote]
    ADD CONSTRAINT [DF__quote__sysUserNa__56E8E7AB] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_quote_sysStartTime]...';


GO
ALTER TABLE [dbo].[quote]
    ADD CONSTRAINT [DF_dbo_quote_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_quote_sysEndTime]...';


GO
ALTER TABLE [dbo].[quote]
    ADD CONSTRAINT [DF_dbo_quote_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF_quoteDescript_sysAppName]...';


GO
ALTER TABLE [dbo].[quoteDescript]
    ADD CONSTRAINT [DF_quoteDescript_sysAppName] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF_quoteDescript_sysUserName]...';


GO
ALTER TABLE [dbo].[quoteDescript]
    ADD CONSTRAINT [DF_quoteDescript_sysUserName] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_quoteDescript_sysStartTime]...';


GO
ALTER TABLE [dbo].[quoteDescript]
    ADD CONSTRAINT [DF_dbo_quoteDescript_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_quoteDescript_sysEndTime]...';


GO
ALTER TABLE [dbo].[quoteDescript]
    ADD CONSTRAINT [DF_dbo_quoteDescript_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__quotePric__sysAp__5629CD9C]...';


GO
ALTER TABLE [dbo].[quotePrice]
    ADD CONSTRAINT [DF__quotePric__sysAp__5629CD9C] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__quotePric__sysUs__571DF1D5]...';


GO
ALTER TABLE [dbo].[quotePrice]
    ADD CONSTRAINT [DF__quotePric__sysUs__571DF1D5] DEFAULT (suser_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_quotePrice_sysStartTime]...';


GO
ALTER TABLE [dbo].[quotePrice]
    ADD CONSTRAINT [DF_dbo_quotePrice_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_quotePrice_sysEndTime]...';


GO
ALTER TABLE [dbo].[quotePrice]
    ADD CONSTRAINT [DF_dbo_quotePrice_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[reviewCalendar]...';


GO
ALTER TABLE [dbo].[reviewCalendar]
    ADD DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating unnamed constraint on [dbo].[reviewCalendar]...';


GO
ALTER TABLE [dbo].[reviewCalendar]
    ADD DEFAULT (user_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_reviewCalendar_sysStartTime]...';


GO
ALTER TABLE [dbo].[reviewCalendar]
    ADD CONSTRAINT [DF_dbo_reviewCalendar_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_reviewCalendar_sysEndTime]...';


GO
ALTER TABLE [dbo].[reviewCalendar]
    ADD CONSTRAINT [DF_dbo_reviewCalendar_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[DF__reviewPer__sysAp__5F7E2DAC]...';


GO
ALTER TABLE [dbo].[reviewPeriod]
    ADD CONSTRAINT [DF__reviewPer__sysAp__5F7E2DAC] DEFAULT (app_name()) FOR [sysAppName];


GO
PRINT N'Creating [dbo].[DF__reviewPer__sysUs__607251E5]...';


GO
ALTER TABLE [dbo].[reviewPeriod]
    ADD CONSTRAINT [DF__reviewPer__sysUs__607251E5] DEFAULT (user_name()) FOR [sysUserName];


GO
PRINT N'Creating [dbo].[DF_dbo_reviewPeriod_sysStartTime]...';


GO
ALTER TABLE [dbo].[reviewPeriod]
    ADD CONSTRAINT [DF_dbo_reviewPeriod_sysStartTime] DEFAULT (getdate()) FOR [sysStartTime];


GO
PRINT N'Creating [dbo].[DF_dbo_reviewPeriod_sysEndTime]...';


GO
ALTER TABLE [dbo].[reviewPeriod]
    ADD CONSTRAINT [DF_dbo_reviewPeriod_sysEndTime] DEFAULT (CONVERT([datetime2](0),'9999-12-31 23:59:59')) FOR [sysEndTime];


GO
PRINT N'Creating [dbo].[FK_calculationHoliday_calculationCalendar]...';


GO
ALTER TABLE [dbo].[calculationHoliday] WITH NOCHECK
    ADD CONSTRAINT [FK_calculationHoliday_calculationCalendar] FOREIGN KEY ([calculationCalendarId]) REFERENCES [dbo].[calculationCalendar] ([id]);


GO
PRINT N'Creating [dbo].[FK__currencyH__curre__703EA55A]...';


GO
ALTER TABLE [dbo].[currencyHoliday] WITH NOCHECK
    ADD CONSTRAINT [FK__currencyH__curre__703EA55A] FOREIGN KEY ([currencyRateTypeId]) REFERENCES [dbo].[currencyRateType] ([id]);


GO
PRINT N'Creating [dbo].[FK_currencyPeriod_currenyRateType]...';


GO
ALTER TABLE [dbo].[currencyPeriod] WITH NOCHECK
    ADD CONSTRAINT [FK_currencyPeriod_currenyRateType] FOREIGN KEY ([currencyRateTypeId]) REFERENCES [dbo].[currencyRateType] ([id]);


GO
PRINT N'Creating [dbo].[FK_currencyRate_currencyRateType]...';


GO
ALTER TABLE [dbo].[currencyRate] WITH NOCHECK
    ADD CONSTRAINT [FK_currencyRate_currencyRateType] FOREIGN KEY ([currencyRateTypeId]) REFERENCES [dbo].[currencyRateType] ([id]);


GO
PRINT N'Creating [dbo].[FK__currencyT__excha__3B40CD36]...';


GO
ALTER TABLE [dbo].[currencyTimeTable] WITH NOCHECK
    ADD CONSTRAINT [FK__currencyT__excha__3B40CD36] FOREIGN KEY ([currencyRateTypeId]) REFERENCES [dbo].[currencyRateType] ([id]);


GO
PRINT N'Creating [dbo].[FK_exchangeDescript_exchange]...';


GO
ALTER TABLE [dbo].[exchangeDescript] WITH NOCHECK
    ADD CONSTRAINT [FK_exchangeDescript_exchange] FOREIGN KEY ([exchangeId]) REFERENCES [dbo].[exchange] ([id]);


GO
PRINT N'Creating [dbo].[FK_exchangeHoliday_exchange]...';


GO
ALTER TABLE [dbo].[exchangeHoliday] WITH NOCHECK
    ADD CONSTRAINT [FK_exchangeHoliday_exchange] FOREIGN KEY ([exchangeId]) REFERENCES [dbo].[exchange] ([id]);


GO
PRINT N'Creating [dbo].[FK_exchangePeriod_exchange]...';


GO
ALTER TABLE [dbo].[exchangePeriod] WITH NOCHECK
    ADD CONSTRAINT [FK_exchangePeriod_exchange] FOREIGN KEY ([exchangeId]) REFERENCES [dbo].[exchange] ([id]);


GO
PRINT N'Creating [dbo].[FK_exchangeTimeTable_exchange]...';


GO
ALTER TABLE [dbo].[exchangeTimeTable] WITH NOCHECK
    ADD CONSTRAINT [FK_exchangeTimeTable_exchange] FOREIGN KEY ([exchangeId]) REFERENCES [dbo].[exchange] ([id]);


GO
PRINT N'Creating [dbo].[FK_index_portfolio]...';


GO
ALTER TABLE [dbo].[index] WITH NOCHECK
    ADD CONSTRAINT [FK_index_portfolio] FOREIGN KEY ([portfolioId]) REFERENCES [dbo].[portfolio] ([id]);


GO
PRINT N'Creating [dbo].[FK_indexDescript_index]...';


GO
ALTER TABLE [dbo].[indexDescript] WITH NOCHECK
    ADD CONSTRAINT [FK_indexDescript_index] FOREIGN KEY ([indexId]) REFERENCES [dbo].[index] ([id]);


GO
PRINT N'Creating [dbo].[FK_indexValue_index]...';


GO
ALTER TABLE [dbo].[indexValue] WITH NOCHECK
    ADD CONSTRAINT [FK_indexValue_index] FOREIGN KEY ([indexId]) REFERENCES [dbo].[index] ([id]);


GO
PRINT N'Creating [dbo].[FK_issue_issuer]...';


GO
ALTER TABLE [dbo].[issue] WITH NOCHECK
    ADD CONSTRAINT [FK_issue_issuer] FOREIGN KEY ([issuerId]) REFERENCES [dbo].[issuer] ([id]);


GO
PRINT N'Creating [dbo].[FK_issueDescript_issue]...';


GO
ALTER TABLE [dbo].[issueDescript] WITH NOCHECK
    ADD CONSTRAINT [FK_issueDescript_issue] FOREIGN KEY ([issueId]) REFERENCES [dbo].[issue] ([id]);


GO
PRINT N'Creating [dbo].[FK__issuerDes__issue__5CD6CB2B]...';


GO
ALTER TABLE [dbo].[issuerDescript] WITH NOCHECK
    ADD CONSTRAINT [FK__issuerDes__issue__5CD6CB2B] FOREIGN KEY ([issuerId]) REFERENCES [dbo].[issuer] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioConfig_calculationCalendar]...';


GO
ALTER TABLE [dbo].[portfolioConfig] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioConfig_calculationCalendar] FOREIGN KEY ([calculationCalendarId]) REFERENCES [dbo].[calculationCalendar] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioConfig_currencyRateType]...';


GO
ALTER TABLE [dbo].[portfolioConfig] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioConfig_currencyRateType] FOREIGN KEY ([currencyRateTypeId]) REFERENCES [dbo].[currencyRateType] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioConfig_portfolio]...';


GO
ALTER TABLE [dbo].[portfolioConfig] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioConfig_portfolio] FOREIGN KEY ([portfolioId]) REFERENCES [dbo].[portfolio] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioConfig_reviewCalendar]...';


GO
ALTER TABLE [dbo].[portfolioConfig] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioConfig_reviewCalendar] FOREIGN KEY ([reviewCalendarId]) REFERENCES [dbo].[reviewCalendar] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioCons_portfolio]...';


GO
ALTER TABLE [dbo].[portfolioCons] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioCons_portfolio] FOREIGN KEY ([portfolioId]) REFERENCES [dbo].[portfolio] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioCons_quote]...';


GO
ALTER TABLE [dbo].[portfolioCons] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioCons_quote] FOREIGN KEY ([quoteId]) REFERENCES [dbo].[quote] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioEvent_portfolio]...';


GO
ALTER TABLE [dbo].[portfolioEvent] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioEvent_portfolio] FOREIGN KEY ([portfolioId]) REFERENCES [dbo].[portfolio] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioEvent_quote]...';


GO
ALTER TABLE [dbo].[portfolioEvent] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioEvent_quote] FOREIGN KEY ([quoteId]) REFERENCES [dbo].[quote] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioEventResult_portfolioEvent]...';


GO
ALTER TABLE [dbo].[portfolioEventResult] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioEventResult_portfolioEvent] FOREIGN KEY ([portfolioEventId]) REFERENCES [dbo].[portfolioEvent] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioTimeTable_portfolioId]...';


GO
ALTER TABLE [dbo].[portfolioTimeTable] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioTimeTable_portfolioId] FOREIGN KEY ([portfolioId]) REFERENCES [dbo].[portfolio] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioValue_portfolio]...';


GO
ALTER TABLE [dbo].[portfolioValue] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioValue_portfolio] FOREIGN KEY ([portfolioId]) REFERENCES [dbo].[portfolio] ([id]);


GO
PRINT N'Creating [dbo].[FK_portfolioValuePeriod_portfolio]...';


GO
ALTER TABLE [dbo].[portfolioValuePeriod] WITH NOCHECK
    ADD CONSTRAINT [FK_portfolioValuePeriod_portfolio] FOREIGN KEY ([portfolioId]) REFERENCES [dbo].[portfolio] ([id]);


GO
PRINT N'Creating [dbo].[FK_quote_issue]...';


GO
ALTER TABLE [dbo].[quote] WITH NOCHECK
    ADD CONSTRAINT [FK_quote_issue] FOREIGN KEY ([issueId]) REFERENCES [dbo].[issue] ([id]);


GO
PRINT N'Creating [dbo].[FK_quoteDescript_exchange]...';


GO
ALTER TABLE [dbo].[quoteDescript] WITH NOCHECK
    ADD CONSTRAINT [FK_quoteDescript_exchange] FOREIGN KEY ([exchangeId]) REFERENCES [dbo].[exchange] ([id]);


GO
PRINT N'Creating [dbo].[FK_quoteDescript_quote]...';


GO
ALTER TABLE [dbo].[quoteDescript] WITH NOCHECK
    ADD CONSTRAINT [FK_quoteDescript_quote] FOREIGN KEY ([quoteId]) REFERENCES [dbo].[quote] ([id]);


GO
PRINT N'Creating [dbo].[FK_quotePrice_quote]...';


GO
ALTER TABLE [dbo].[quotePrice] WITH NOCHECK
    ADD CONSTRAINT [FK_quotePrice_quote] FOREIGN KEY ([quoteId]) REFERENCES [dbo].[quote] ([id]);


GO
PRINT N'Creating [dbo].[FK_reviewPeriod_revieCalendar]...';


GO
ALTER TABLE [dbo].[reviewPeriod] WITH NOCHECK
    ADD CONSTRAINT [FK_reviewPeriod_revieCalendar] FOREIGN KEY ([reviewCalendarId]) REFERENCES [dbo].[reviewCalendar] ([id]);


GO
PRINT N'Creating [dbo].[CK_currencyRateType]...';


GO
ALTER TABLE [dbo].[currencyRateType] WITH NOCHECK
    ADD CONSTRAINT [CK_currencyRateType] CHECK ((getdate() AT TIME ZONE [timeZone]) IS NOT NULL);


GO
PRINT N'Creating [dbo].[CK_currencyTimeTable]...';


GO
ALTER TABLE [dbo].[currencyTimeTable] WITH NOCHECK
    ADD CONSTRAINT [CK_currencyTimeTable] CHECK ([weekDay]='Sunday' OR [weekDay]='Saturday' OR [weekDay]='Friday' OR [weekDay]='Thursday' OR [weekDay]='Wednesday' OR [weekDay]='Tuesday' OR [weekDay]='Monday');


GO
PRINT N'Creating unnamed constraint on [dbo].[exchangeDescript]...';


GO
ALTER TABLE [dbo].[exchangeDescript] WITH NOCHECK
    ADD CHECK ((getdate() AT TIME ZONE [timeZone]) IS NOT NULL);


GO
PRINT N'Creating unnamed constraint on [dbo].[exchangeDescript]...';


GO
ALTER TABLE [dbo].[exchangeDescript] WITH NOCHECK
    ADD CHECK ((getdate() AT TIME ZONE [timeZone]) IS NOT NULL);


GO
PRINT N'Creating [dbo].[CK_exchangeTimeTable]...';


GO
ALTER TABLE [dbo].[exchangeTimeTable] WITH NOCHECK
    ADD CONSTRAINT [CK_exchangeTimeTable] CHECK ([weekDay]='Sunday' OR [weekDay]='Saturday' OR [weekDay]='Friday' OR [weekDay]='Thursday' OR [weekDay]='Wednesday' OR [weekDay]='Tuesday' OR [weekDay]='Monday');


GO
PRINT N'Creating [dbo].[CK_portfolioConfig]...';


GO
ALTER TABLE [dbo].[portfolioConfig] WITH NOCHECK
    ADD CONSTRAINT [CK_portfolioConfig] CHECK ((getdate() AT TIME ZONE [valuationTimeZone]) IS NOT NULL OR [valuationTimeZone] IS NULL);


GO
PRINT N'Creating [dbo].[CK__portfolio__actio__10216507]...';


GO
ALTER TABLE [dbo].[portfolioEvent] WITH NOCHECK
    ADD CONSTRAINT [CK__portfolio__actio__10216507] CHECK ([actionType]='DELETION' OR [actionType]='ADDITION' OR [actionType]='ADJUSTMENT');


GO
PRINT N'Creating [dbo].[CK_portfolioTimeTable]...';


GO
ALTER TABLE [dbo].[portfolioTimeTable] WITH NOCHECK
    ADD CONSTRAINT [CK_portfolioTimeTable] CHECK ([weekDay]='Sunday' OR [weekDay]='Saturday' OR [weekDay]='Friday' OR [weekDay]='Thursday' OR [weekDay]='Wednesday' OR [weekDay]='Tuesday' OR [weekDay]='Monday');


GO
PRINT N'Creating [dbo].[vw_currencyRate]...';


GO









CREATE VIEW [dbo].[vw_currencyRate]
AS
--exchange rates and inversed exchange rates
SELECT 
	a.date,
	a.currencyRateTypeId,
	currencyRateTypeCode = b.code,
	currencyRateTypeName = b.name,
	currencyRateTypeDescript = b.descript,
	'BASE' AS rateType,
	fromCode = CASE rateType 
		WHEN 1 THEN a.toCode
		WHEN 2 THEN b.baseCode END,
	toCode = CASE rateType 
		WHEN 1 THEN b.baseCode 
		WHEN 2 THEN a.toCode END,
	rate = CASE rateType 
		WHEN 1 THEN CAST(1 AS FLOAT)/a.rate
		WHEN 2 THEN a.rate END
FROM dbo.currencyRate AS a
JOIN dbo.currencyRateType AS b ON a.currencyRateTypeId = b.id
JOIN (VALUES (1),(2)) AS r(rateType) ON 1 = 1

UNION ALL

--exchange rates, inversed exchange rates and crossrates
SELECT 
	a.date,
	a.currencyRateTypeId,
	currencyRateTypeCode = b.code,
	currencyRateTypeName = b.name,
	currencyRateTypeDescript = b.descript,
	'ALL' AS rateType,
	fromCode = CASE rateType 
		WHEN 1 THEN a.toCode
		WHEN 2 THEN b.baseCode
		WHEN 3 THEN a.toCode END,
	toCode = CASE rateType 
		WHEN 1 THEN b.baseCode 
		WHEN 2 THEN a.toCode
		WHEN 3 THEN d.toCode END,
	rate = CASE rateType 
		WHEN 1 THEN CAST(1 AS FLOAT)/a.rate
		WHEN 2 THEN a.rate
		WHEN 3 THEN CAST(1 AS FLOAT)/a.rate*d.rate END
FROM dbo.currencyRate AS a
JOIN dbo.currencyRateType AS b ON a.currencyRateTypeId = b.id
JOIN (VALUES (1),(2),(3)) AS r(rateType) ON 1 = 1
LEFT JOIN dbo.currencyRate AS d ON r.rateType = 3 AND a.currencyRateTypeId = d.currencyRateTypeId AND a.date = d.date AND a.toCode != d.toCode
GO
PRINT N'Creating [dbo].[vw_portfolioEvent]...';


GO

















CREATE VIEW [dbo].[vw_portfolioEvent]
AS
SELECT 
	a.portfolioId,
	a.[effectiveDate],
	a.actionType,
	a.quoteId,
	CACurrencyCode = a.currencyCode,
	b.priceCurrencyCode,
	a.formula_openPrice,
	a.formula_openShares,
	a.formula_openFreefloat,
	a.formula_parameter,
	b.closeCurrencyRate,
	b.closePrice,
	b.closeShareFactor,
	closeFreefloatFactor = b.closeFreefloat,
	b.openPrice,
	b.openShareFactor,
	b.openFreefloatFactor,
	openSharesInPortfolio = b.openShareFactor*b.openFreefloatFactor,
	sharesValidTo = c.validTo
FROM dbo.portfolioEvent AS a
JOIN dbo.portfolioEventResult AS b
	ON a.id = b.portfolioEventId
LEFT JOIN dbo.portfolioCons AS c
	ON a.portfolioId = c.portfolioId
	AND a.quoteId = c.quoteId
	AND a.effectiveDate = c.validFrom 
	AND a.actionType IN ('ADDITION','ADJUSTMENT')
GO
PRINT N'Creating [dbo].[vw_portfolioValuePeriod]...';


GO
CREATE VIEW [dbo].[vw_portfolioValuePeriod]
WITH SCHEMABINDING
AS
SELECT 
	a.[date],
	a.dateUTC,
	a.nextDate,
	a.nextDateUTC,
	a.prevDate,
	a.prevDateUTC,
	a.portfolioId,
	b.valuationTimeZone,
	b.calculationCalendarId,
	b.reviewCalendarId,
	reviewPeriodId = d.id,
	b.currencyRateTypeId,
	currencyRateDate = c.[date],
	currencyRatePrevDate = c.prevDate
FROM [dbo].[portfolioValuePeriod] AS a
JOIN [dbo].[portfolioConfig] AS b ON a.portfolioId = b.portfolioId AND b.validFrom <= a.[date] AND b.validTo > a.[date]
JOIN [dbo].[currencyPeriod] AS c ON b.currencyRateTypeId = c.currencyRateTypeId AND c.dateUTC <= a.dateUTC AND c.nextDateUTC > a.dateUTC
JOIN [dbo].[reviewPeriod] AS d ON b.reviewCalendarId = d.reviewCalendarId AND d.validFrom <= a.[date] AND d.validTo > a.[date]
GO
PRINT N'Creating [dbo].[vw_portfolioValuePeriod].[CIX_vw_portfolioValuePeriod]...';


GO
CREATE UNIQUE CLUSTERED INDEX [CIX_vw_portfolioValuePeriod]
    ON [dbo].[vw_portfolioValuePeriod]([portfolioId] ASC, [date] ASC);


GO
PRINT N'Creating [dbo].[vw_portfolioValuePeriod].[UIX_vw_portfolioValuePeriod]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [UIX_vw_portfolioValuePeriod]
    ON [dbo].[vw_portfolioValuePeriod]([date] ASC, [portfolioId] ASC)
    INCLUDE([dateUTC], [nextDate], [nextDateUTC], [prevDate], [prevDateUTC], [valuationTimeZone], [calculationCalendarId], [reviewCalendarId], [reviewPeriodId], [currencyRateTypeId], [currencyRateDate], [currencyRatePrevDate]);


GO
PRINT N'Creating [dbo].[vw_quote]...';


GO










CREATE VIEW [dbo].[vw_quote]
AS
SELECT 
	c.date,
	c.dateUTC,
	c.nextDate,
	c.nextDateUTC,
	c.exchangeId,
	exchangeCode = d.code,
	exchangeName = ex.[name],
	exchangeCountryCode = ex.countryCode,
	exchangeTimeZone = ex.timeZone,
	e.issuerId,
	issuerCode = f.code,
	issuerName = isr.name,
	issuerCountryCode = isr.countryCode,
	issuerIndustryCode = isr.industryCode,
	b.issueId,
	issueCode = e.code,
	issueName = iss.name,
	issueIsin = iss.isin,
	a.quoteId,
	quoteCode = b.code,
	quoteFirstTradeDate = b.firstTradeDate,
	quoteDelistDate = b.delistDate,
	[quoteName] = a.[name],
	quoteSedol = a.sedol,
	quoteBloombergTicker =  a.bloombergTicker,
	quoteTicker = a.ticker,
	quoteCurrencyCode = a.currencyCode,
	quoteRic = a.ric,
	quoteCloseLocal = px.close_,
	quoteCloseIsMissing = CAST(CASE WHEN px.[date] IS NULL THEN 1 ELSE 0 END AS bit),
	quoteCloseIsNoTrade = CAST(CASE WHEN px.[date] IS NOT NULL AND px.[date] IS NULL THEN 1 ELSE 0 END AS bit)
FROM dbo.quoteDescript AS a
JOIN dbo.quote AS b ON a.quoteId = b.id
JOIN dbo.exchangePeriod AS c ON a.exchangeId = c.exchangeId
JOIN dbo.exchange AS d ON a.exchangeId = d.id
JOIN dbo.issue AS e ON b.issueId = e.id
JOIN dbo.issuer AS f ON e.issuerId = f.id

OUTER APPLY (SELECT TOP(1) exchangeId, name, countryCode, timeZone, validFrom, validTo FROM dbo.exchangeDescript
	WHERE a.exchangeId = exchangeId 
		AND validFrom <= c.[date] 
		AND validTo > c.[date] 
	ORDER BY exchangeId) AS ex

OUTER APPLY (SELECT TOP(1) issueId, name, ISIN, validFrom, validTo FROM dbo.issueDescript
	WHERE b.issueId = issueId 
		AND validFrom <= c.[date] 
		AND validTo > c.[date]
	ORDER BY issueId) AS iss

OUTER APPLY (SELECT TOP(1) issuerId, name, industryCode, countryCode, validFrom, validTo FROM dbo.issuerDescript
	WHERE e.issuerId = issuerId 
		AND validFrom <= c.[date] 
		AND validTo > c.[date]
	ORDER BY issuerId) AS isr

LEFT JOIN dbo.quotePrice AS px ON a.quoteId = px.quoteId AND c.[date] = px.[date]

WHERE a.validFrom <= c.[date] 
	AND a.validTo > c.[date]
	AND b.firstTradeDate <= c.[date]
	AND b.delistDate > c.[date]
	--AND b.code = 'AAPL'
GO
PRINT N'Creating [dbo].[vw_portfolio]...';


GO



CREATE VIEW [dbo].[vw_portfolio]
AS
SELECT 
	a.[date],
	a.dateUTC,
	a.nextDate,
	a.nextDateUTC,
	a.prevDate,
	a.prevDateUTC,
	a.portfolioId,
	portfolioCode = d.code,
	portfolioName = d.[name],
	portfolioValuationTimeZone = a.valuationTimeZone,
	portfolioOpenMcap = i.openMcap,
	portfolioCloseMcap = i.openMcap,
	a.reviewCalendarId,
	reviewCalendarCode = f.code,
	reviewCalendarName = f.[name],
	reviewCalendarDescript = f.descript,
	reviewPeriodId = a.reviewPeriodId,
	reviewPeriodStart = e.validFrom,
	reviewPeriodEnd = e.validTo,
	a.calculationCalendarId,
	calculationCalendarCode = g.code,
	calculationCalendarName = g.[name],
	calculationCalendarDescript = g.descript,
	currencyRateTypeId = a.currencyRateTypeId,
	currencyRateTypeCode = h.code,
	currencyRateTypeBaseCode = h.baseCode,
	currencyRateTypeName = h.name,
	currencyRateTypeDescript = h.descript,
	a.currencyRateDate,
	a.currencyRatePrevDate
FROM dbo.vw_portfolioValuePeriod  AS a WITH(NOEXPAND)
LEFT JOIN dbo.portfolio AS d ON a.portfolioId = d.id
LEFT JOIN dbo.reviewPeriod AS e ON a.reviewPeriodId = e.id
LEFT JOIN dbo.reviewCalendar AS f ON a.reviewCalendarId = f.id
LEFT JOIN dbo.calculationCalendar AS g ON a.calculationCalendarId = g.id
LEFT JOIN dbo.currencyRateType AS h ON a.currencyRateTypeId = h.id
LEFT JOIN dbo.portfolioValue AS i ON a.portfolioId = i.portfolioId AND a.[date] = i.[date]
GO
PRINT N'Creating [dbo].[vw_portfolioCons]...';


GO














CREATE VIEW [dbo].[vw_portfolioCons]
AS
SELECT *,
	consOpenLocal = ISNULL(consLastCloseLocal*consLastCloseToLocalOpenRate,consLastOpenLocal*consLastOpenToLocalOpenRate),
	consCloseLocal = COALESCE(quoteCloseLocal,consLastCloseLocal*consLastCloseToLocalCloseRate,consLastOpenLocal*consLastOpenToLocalCloseRate),
	consOpenMcapLocal = consSharesInPortfolio*ISNULL(consLastCloseLocal*consLastCloseToLocalOpenRate,consLastOpenLocal*consLastOpenToLocalOpenRate),
	consCloseMcapLocal = consSharesInPortfolio*COALESCE(quoteCloseLocal,consLastCloseLocal*consLastCloseToLocalCloseRate,consLastOpenLocal*consLastOpenToLocalCloseRate),
	consOpenRollup = consOpenRollupRate*ISNULL(consLastCloseLocal*consLastCloseToLocalOpenRate,consLastOpenLocal*consLastOpenToLocalOpenRate),
	consCloseRollup = consCloseRollupRate*COALESCE(quoteCloseLocal,consLastCloseLocal*consLastCloseToLocalCloseRate,consLastOpenLocal*consLastOpenToLocalCloseRate),
	consOpenMcapRollup = consOpenRollupRate*consSharesInPortfolio*ISNULL(consLastCloseLocal*consLastCloseToLocalOpenRate,consLastOpenLocal*consLastOpenToLocalOpenRate),
	consCloseMcapRollup = consCloseRollupRate*consSharesInPortfolio*COALESCE(quoteCloseLocal,consLastCloseLocal*consLastCloseToLocalCloseRate,consLastOpenLocal*consLastOpenToLocalCloseRate)
FROM
(
SELECT 
	portfolio.date, 
	portfolio.dateUTC, 
	portfolio.nextDate, 
	portfolio.nextDateUTC, 
	portfolio.prevDate, 
	portfolio.prevDateUTC, 
	portfolio.portfolioId, 
	portfolio.portfolioCode, 
	portfolio.portfolioName, 
	portfolio.portfolioValuationTimeZone, 
	portfolio.portfolioOpenMcap, 
	portfolio.portfolioCloseMcap, 
	portfolio.reviewCalendarId, 
	portfolio.reviewCalendarCode, 
	portfolio.reviewCalendarName, 
	portfolio.reviewCalendarDescript, 
	portfolio.reviewPeriodId, 
	portfolio.reviewPeriodStart, 
	portfolio.reviewPeriodEnd, 
	portfolio.calculationCalendarId, 
	portfolio.calculationCalendarCode, 
	portfolio.calculationCalendarName, 
	portfolio.calculationCalendarDescript, 
	portfolio.currencyRateTypeId, 
	portfolio.currencyRateTypeCode, 
	portfolio.currencyRateTypeBaseCode, 
	portfolio.currencyRateTypeName, 
	portfolio.currencyRateTypeDescript, 
	portfolio.currencyRateDate, 
	portfolio.currencyRatePrevDate,
	quote.issuerId,
	quote.issuerCode,
	quote.issuerName,
	quote.issuerCountryCode,
	quote.issuerIndustryCode,
	quote.issueId,
	quote.issueCode,
	quote.issueName,
	quote.issueISIN,
	quote.exchangeId,
	quote.exchangeCode,
	quote.exchangeName,
	quote.exchangeCountryCode,
	quote.exchangeTimeZone,
	exchangeDate = quote.date,
	exchangeDateUTC = quote.dateUTC,
	portfolioEvent.quoteId,
	quote.quoteCode,
	quote.[quoteName],
	quote.quoteSEDOL,
	quote.quoteRIC,
	quote.quoteBloombergTicker,
	quote.quoteTicker,
	quote.quoteCurrencyCode,
	quote.quoteCloseLocal,
	quote.quoteFirstTradeDate,
	quote.quoteDelistDate,
	quote.quoteCloseIsMissing,
	quote.quoteCloseIsNoTrade,
	consLastOpenDate = portfolioEvent.effectiveDate,
	consLastOpenLocal = portfolioEvent.openPrice,
	consLastOpenCurrency = portfolioEvent.priceCurrencyCode,
	consLastOpenToLocalOpenRate = CASE quote.quoteCurrencyCode WHEN portfolioEvent.priceCurrencyCode THEN 1 ELSE openToCurrentLocalOpen.openRate END,
	consLastOpenToLocalCloseRate = CASE quote.quoteCurrencyCode WHEN portfolioEvent.priceCurrencyCode THEN 1 ELSE openToCurrentLocalClose.closeRate END,
	consLastCloseDate = lastPrice.[date],
	consLastCloseLocal = lastPrice.quoteCloseLocal,
	consLastCloseCurrency = lastPrice.quoteCurrencyCode,
	consLastCloseToLocalOpenRate = CASE quote.quoteCurrencyCode WHEN lastPrice.quoteCurrencyCode THEN 1 ELSE lastToCurrentLocalOpen.openRate END,
	consLastCloseToLocalCloseRate = CASE quote.quoteCurrencyCode WHEN lastPrice.quoteCurrencyCode THEN 1 ELSE lastToCurrentLocalClose.closeRate END,
	consShareFactor = portfolioEvent.openShareFactor,
	consFreefloatFactor = portfolioEvent.openfreefloatFactor,
	consSharesInPortfolio = portfolioEvent.openSharesInPortfolio,
	consOpenRollupRate = CASE portfolio.currencyRateTypeBaseCode WHEN quote.quoteCurrencyCode THEN 1 ELSE openRollupRate.openRate END,
	consCloseRollupRate = CASE portfolio.currencyRateTypeBaseCode WHEN quote.quoteCurrencyCode THEN 1 ELSE closeRollupRate.closeRate END
FROM dbo.vw_portfolio AS portfolio
JOIN dbo.vw_portfolioEvent AS portfolioEvent 
	ON portfolio.portfolioId = portfolioEvent.portfolioId
	AND portfolioEvent.effectiveDate <= portfolio.[date]
	AND portfolioEvent.sharesValidTo > portfolio.[date]
	AND portfolioEvent.actionType IN ('ADDITION','ADJUSTMENT')
OUTER APPLY(SELECT TOP(1) quote.* FROM dbo.vw_quote AS quote
	WHERE quote.quoteId = portfolioEvent.quoteId 
		AND quote.dateUTC <= portfolio.dateUTC
		AND quote.nextDateUTC > portfolio.dateUTC
	ORDER BY quote.[date]
	) AS quote
--select the last close price
OUTER APPLY(SELECT TOP(1) portfolioDate.[date],lastPrice.quoteCloseLocal,lastPrice.quoteCurrencyCode FROM dbo.vw_quote AS lastPrice
	JOIN dbo.portfolioValuePeriod AS portfolioDate 
	ON portfolio.portfolioId = portfolioDate.portfolioId 
		AND lastPrice.dateUTC <= portfolioDate.dateUTC 
		AND lastPrice.nextDateUTC > portfolioDate.dateUTC
		AND portfolioDate.[date] BETWEEN portfolioEvent.effectiveDate AND portfolio.prevDate
	WHERE portfolioEvent.quoteId = lastPrice.quoteId
		AND lastPrice.quoteCloseLocal IS NOT NULL
	ORDER BY lastPrice.[date] DESC
	) AS lastPrice
--select rollup currency rates
OUTER APPLY(SELECT TOP(1) openRate = currency.rate FROM dbo.vw_currencyRate AS currency
	WHERE portfolio.currencyRateTypeId = currency.currencyRateTypeId
		AND portfolio.currencyRateTypeBaseCode = currency.toCode
		AND portfolio.currencyRatePrevDate = currency.date
		AND quote.quoteCurrencyCode = currency.fromCode
		AND currency.rateType = 'BASE'
	ORDER BY currency.[date]) AS openRollupRate
OUTER APPLY(SELECT TOP(1) closeRate = currency.rate FROM dbo.vw_currencyRate AS currency
	WHERE portfolio.currencyRateTypeBaseCode != quote.quoteCurrencyCode
		AND portfolio.currencyRateTypeId = currency.currencyRateTypeId
		AND portfolio.currencyRateTypeBaseCode = currency.toCode
		AND portfolio.currencyRateDate = currency.[date]
		AND quote.quoteCurrencyCode = currency.fromCode
		AND currency.rateType = 'BASE'
	ORDER BY currency.[date]) AS closeRollupRate
--select last open price currency to current local currency
OUTER APPLY(SELECT TOP(1) openRate = currency.rate FROM dbo.vw_currencyRate AS currency
	WHERE portfolioEvent.priceCurrencyCode != quote.quoteCurrencyCode
		AND portfolio.currencyRateTypeId = currency.currencyRateTypeId
		AND quote.quoteCurrencyCode = currency.toCode
		AND portfolioEvent.priceCurrencyCode = currency.fromCode
		AND currency.[date] = portfolio.currencyRatePrevDate
		AND currency.rateType = 'ALL'
	ORDER BY currency.[date]) AS openToCurrentLocalOpen
OUTER APPLY(SELECT TOP(1) closeRate = currency.rate FROM dbo.vw_currencyRate AS currency
	WHERE portfolioEvent.priceCurrencyCode != quote.quoteCurrencyCode
		AND portfolio.currencyRateTypeId = currency.currencyRateTypeId
		AND quote.quoteCurrencyCode = currency.toCode
		AND portfolioEvent.priceCurrencyCode = currency.fromCode
		AND currency.[date] = portfolio.currencyRateDate
		AND currency.rateType = 'ALL'
	ORDER BY currency.date) AS openToCurrentLocalClose
--select last close price currency to current local currency
OUTER APPLY(SELECT TOP(1) openRate = currency.rate FROM dbo.vw_currencyRate AS currency
	WHERE lastPrice.quoteCurrencyCode != quote.quoteCurrencyCode
		AND portfolio.currencyRateTypeId = currency.currencyRateTypeId
		AND quote.quoteCurrencyCode = currency.toCode
		AND lastPrice.quoteCurrencyCode = currency.fromCode
		AND currency.date = portfolio.currencyRatePrevDate
		AND currency.rateType = 'ALL'
	ORDER BY currency.[date]) AS lastToCurrentLocalOpen
OUTER APPLY(SELECT TOP(1) closeRate = currency.rate FROM dbo.vw_currencyRate AS currency
	WHERE lastPrice.quoteCurrencyCode != quote.quoteCurrencyCode
		AND portfolio.currencyRateTypeId = currency.currencyRateTypeId
		AND quote.quoteCurrencyCode = currency.toCode
		AND lastPrice.quoteCurrencyCode = currency.fromCode
		AND currency.[date] = portfolio.currencyRateDate
		AND currency.rateType = 'ALL'
	ORDER BY currency.[date]) AS lastToCurrentLocalClose
) AS allFields
GO
PRINT N'Creating [dbo].[vw_index]...';


GO




CREATE VIEW [dbo].[vw_index]
AS
SELECT 
	a.date, 
	a.dateUTC, 
	a.nextDate, 
	a.nextDateUTC, 
	a.prevDate, 
	a.prevDateUTC, 
	a.portfolioId, 
	a.portfolioCode, 
	a.portfolioName, 
	a.portfolioValuationTimeZone, 
	a.portfolioOpenMcap, 
	a.portfolioCloseMcap, 
	a.reviewCalendarId, 
	a.reviewCalendarCode, 
	a.reviewCalendarName, 
	a.reviewCalendarDescript, 
	a.reviewPeriodId, 
	a.reviewPeriodStart, 
	a.reviewPeriodEnd, 
	a.calculationCalendarId, 
	a.calculationCalendarCode, 
	a.calculationCalendarName, 
	a.calculationCalendarDescript, 
	a.currencyRateTypeId, 
	a.currencyRateTypeCode, 
	a.currencyRateTypeBaseCode, 
	a.currencyRateTypeName, 
	a.currencyRateTypeDescript, 
	a.currencyRateDate, 
	a.currencyRatePrevDate,
	indexId = b.id,
	indexSymbol = b.code,
	indexName = c.name,
	indexISIN = c.ISIN,
	indexSEDOL = c.SEDOL,
	indexRIC = c.RIC,
	indexBloombergTicker = c.bloombergTicker,
	indexBaseDate = b.baseDate,
	indexBaseValue = b.baseValue,
	indexLaunchDate = b.launchDate,
	indexDelistDate = b.delistDate,
	indexReplCostPA = c.replCost,
	indexCurrencyCode = c.currencyCode,
	indexCumCostFactorT = CASE b.baseDate WHEN a.[date] THEN CAST(1 AS float) ELSE d.cumCostFactor END,
	indexCostFactorT = CASE b.baseDate WHEN a.[date] THEN CAST(1 AS float) ELSE CAST(1 AS float)-c.replCost*CAST(DATEDIFF(DAY,a.prevDate,a.[date]) AS float)/CAST(360 AS float) END,
	indexValue = CASE b.baseDate WHEN a.[date] THEN b.baseValue ELSE d.[value] END
FROM dbo.vw_portfolio AS a
JOIN dbo.[index] AS b ON a.portfolioId = b.portfolioId AND b.[baseDate] <= a.[date] AND b.[delistDate] > a.[date]
OUTER APPLY (SELECT TOP(1) e.name,e.bloombergTicker,e.ISIN,e.RIC,e.replCost,e.currencyCode,e.SEDOL FROM dbo.indexDescript AS e WHERE b.id = e.indexId AND e.validFrom <= a.[date] AND e.validTo > a.[date] ORDER BY e.validFrom) AS c
LEFT JOIN dbo.[indexValue] AS d ON b.id = d.indexId AND a.[date] = d.[date]
GO
PRINT N'Creating [dbo].[vw_indexCons]...';


GO









CREATE VIEW [dbo].[vw_indexCons]
AS
SELECT 
	a.date, 
	a.dateUTC, 
	a.nextDate, 
	a.nextDateUTC, 
	a.prevDate, 
	a.prevDateUTC, 
	a.portfolioId, 
	a.portfolioCode, 
	a.portfolioName, 
	a.portfolioValuationTimeZone, 
	a.portfolioOpenMcap, 
	a.portfolioCloseMcap, 
	a.reviewCalendarId, 
	a.reviewCalendarCode, 
	a.reviewCalendarName, 
	a.reviewCalendarDescript, 
	a.reviewPeriodId, 
	a.reviewPeriodStart, 
	a.reviewPeriodEnd, 
	a.calculationCalendarId, 
	a.calculationCalendarCode, 
	a.calculationCalendarName, 
	a.calculationCalendarDescript, 
	a.currencyRateTypeId, 
	a.currencyRateTypeCode, 
	a.currencyRateTypeBaseCode, 
	a.currencyRateTypeName, 
	a.currencyRateTypeDescript, 
	a.currencyRateDate, 
	a.currencyRatePrevDate, 
	a.indexId, 
	a.indexSymbol, 
	a.indexName, 
	a.indexISIN, 
	a.indexSEDOL, 
	a.indexRIC, 
	a.indexBloombergTicker, 
	a.indexBaseDate, 
	a.indexBaseValue, 
	a.indexLaunchDate, 
	a.indexDelistDate, 
	a.indexReplCostPA, 
	a.indexCurrencyCode, 
	a.indexCumCostFactorT, 
	a.indexCostFactorT, 
	a.indexValue,
	b.issuerId, 
	b.issuerCode, 
	b.issuerName, 
	b.issuerCountryCode, 
	b.issuerIndustryCode, 
	b.issueId, 
	b.issueCode, 
	b.issueName, 
	b.issueISIN, 
	b.exchangeId, 
	b.exchangeCode, 
	b.exchangeName, 
	b.exchangeCountryCode, 
	b.exchangeTimeZone, 
	b.exchangeDate, 
	b.exchangeDateUTC, 
	b.quoteId, 
	b.quoteCode, 
	b.[quoteName], 
	b.quoteSEDOL, 
	b.quoteRIC, 
	b.quoteBloombergTicker, 
	b.quoteTicker, 
	b.quoteCurrencyCode, 
	b.quoteFirstTradeDate,
	b.quoteDelistDate,
	consShareFactor = b.consShareFactor*a.indexCumCostFactorT, 
	consFreefloatFactor, 
	consSharesInIndex = b.consSharesInPortfolio*a.indexCumCostFactorT, 
	consOpenLocal, 
	consCloseLocal, 
	consOpenMcapLocal, 
	consCloseMcapLocal, 
	consOpenIndexCurrencyRate = b.consOpenRollupRate*CASE a.currencyRateTypeBaseCode WHEN a.indexCurrencyCode THEN CAST(1 AS float) ELSE c.rate END, 
	consCloseIndexCurrencyRate = b.consCloseRollupRate*CASE a.currencyRateTypeBaseCode WHEN a.indexCurrencyCode THEN CAST(1 AS float) ELSE d.rate END, 
	consOpenIndexCurrency = b.consOpenRollup*CASE a.currencyRateTypeBaseCode WHEN a.indexCurrencyCode THEN CAST(1 AS float) ELSE c.rate END, 
	consCloseIndexCurrency = b.consCloseRollup*CASE a.currencyRateTypeBaseCode WHEN a.indexCurrencyCode THEN CAST(1 AS float) ELSE d.rate END, 
	consOpenMcapIndexCurrency = b.consOpenMcapRollup*a.indexCumCostFactorT*CASE a.currencyRateTypeBaseCode WHEN a.indexCurrencyCode THEN CAST(1 AS float) ELSE c.rate END, 
	consCloseMcapIndexCurrency = b.consCloseMcapRollup*a.indexCumCostFactorT*CASE a.currencyRateTypeBaseCode WHEN a.indexCurrencyCode THEN CAST(1 AS float) ELSE d.rate END,
	consOpenWeight = b.consOpenMcapRollup/SUM(b.consOpenMcapRollup) OVER(PARTITION BY a.date,a.indexId),
	consCloseWeight = b.consCloseMcapRollup/SUM(b.consCloseMcapRollup) OVER(PARTITION BY a.date,a.indexId)
FROM [dbo].[vw_index] AS a
JOIN [dbo].[vw_portfolioCons] AS b ON a.portfolioId = b.portfolioId AND a.[date] = b.[date]
LEFT JOIN [dbo].[vw_currencyRate] AS c ON c.rateType = 'BASE' AND a.currencyRateTypeId = c.currencyRateTypeId AND a.currencyRateTypeBaseCode = c.fromCode AND a.indexCurrencyCode = c.toCode AND a.currencyRatePrevDate = c.[date]
LEFT JOIN [dbo].[vw_currencyRate] AS d ON d.rateType = 'BASE' AND a.currencyRateTypeId = d.currencyRateTypeId AND a.currencyRateTypeBaseCode = d.fromCode AND a.indexCurrencyCode = d.toCode AND a.currencyRateDate = d.[date]
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[calculationHoliday] WITH CHECK CHECK CONSTRAINT [FK_calculationHoliday_calculationCalendar];

ALTER TABLE [dbo].[currencyHoliday] WITH CHECK CHECK CONSTRAINT [FK__currencyH__curre__703EA55A];

ALTER TABLE [dbo].[currencyPeriod] WITH CHECK CHECK CONSTRAINT [FK_currencyPeriod_currenyRateType];

ALTER TABLE [dbo].[currencyRate] WITH CHECK CHECK CONSTRAINT [FK_currencyRate_currencyRateType];

ALTER TABLE [dbo].[currencyTimeTable] WITH CHECK CHECK CONSTRAINT [FK__currencyT__excha__3B40CD36];

ALTER TABLE [dbo].[exchangeHoliday] WITH CHECK CHECK CONSTRAINT [FK_exchangeHoliday_exchange];

ALTER TABLE [dbo].[exchangePeriod] WITH CHECK CHECK CONSTRAINT [FK_exchangePeriod_exchange];

ALTER TABLE [dbo].[exchangeTimeTable] WITH CHECK CHECK CONSTRAINT [FK_exchangeTimeTable_exchange];

ALTER TABLE [dbo].[index] WITH CHECK CHECK CONSTRAINT [FK_index_portfolio];

ALTER TABLE [dbo].[indexDescript] WITH CHECK CHECK CONSTRAINT [FK_indexDescript_index];

ALTER TABLE [dbo].[indexValue] WITH CHECK CHECK CONSTRAINT [FK_indexValue_index];

ALTER TABLE [dbo].[issue] WITH CHECK CHECK CONSTRAINT [FK_issue_issuer];

ALTER TABLE [dbo].[issueDescript] WITH CHECK CHECK CONSTRAINT [FK_issueDescript_issue];

ALTER TABLE [dbo].[issuerDescript] WITH CHECK CHECK CONSTRAINT [FK__issuerDes__issue__5CD6CB2B];

ALTER TABLE [dbo].[portfolioConfig] WITH CHECK CHECK CONSTRAINT [FK_portfolioConfig_calculationCalendar];

ALTER TABLE [dbo].[portfolioConfig] WITH CHECK CHECK CONSTRAINT [FK_portfolioConfig_currencyRateType];

ALTER TABLE [dbo].[portfolioConfig] WITH CHECK CHECK CONSTRAINT [FK_portfolioConfig_portfolio];

ALTER TABLE [dbo].[portfolioConfig] WITH CHECK CHECK CONSTRAINT [FK_portfolioConfig_reviewCalendar];

ALTER TABLE [dbo].[portfolioCons] WITH CHECK CHECK CONSTRAINT [FK_portfolioCons_portfolio];

ALTER TABLE [dbo].[portfolioCons] WITH CHECK CHECK CONSTRAINT [FK_portfolioCons_quote];

ALTER TABLE [dbo].[portfolioEvent] WITH CHECK CHECK CONSTRAINT [FK_portfolioEvent_portfolio];

ALTER TABLE [dbo].[portfolioEvent] WITH CHECK CHECK CONSTRAINT [FK_portfolioEvent_quote];

ALTER TABLE [dbo].[portfolioEventResult] WITH CHECK CHECK CONSTRAINT [FK_portfolioEventResult_portfolioEvent];

ALTER TABLE [dbo].[portfolioTimeTable] WITH CHECK CHECK CONSTRAINT [FK_portfolioTimeTable_portfolioId];

ALTER TABLE [dbo].[portfolioValue] WITH CHECK CHECK CONSTRAINT [FK_portfolioValue_portfolio];

ALTER TABLE [dbo].[portfolioValuePeriod] WITH CHECK CHECK CONSTRAINT [FK_portfolioValuePeriod_portfolio];

ALTER TABLE [dbo].[quote] WITH CHECK CHECK CONSTRAINT [FK_quote_issue];

ALTER TABLE [dbo].[quoteDescript] WITH CHECK CHECK CONSTRAINT [FK_quoteDescript_exchange];

ALTER TABLE [dbo].[quoteDescript] WITH CHECK CHECK CONSTRAINT [FK_quoteDescript_quote];

ALTER TABLE [dbo].[quotePrice] WITH CHECK CHECK CONSTRAINT [FK_quotePrice_quote];

ALTER TABLE [dbo].[reviewPeriod] WITH CHECK CHECK CONSTRAINT [FK_reviewPeriod_revieCalendar];

ALTER TABLE [dbo].[currencyRateType] WITH CHECK CHECK CONSTRAINT [CK_currencyRateType];

ALTER TABLE [dbo].[currencyTimeTable] WITH CHECK CHECK CONSTRAINT [CK_currencyTimeTable];

ALTER TABLE [dbo].[exchangeTimeTable] WITH CHECK CHECK CONSTRAINT [CK_exchangeTimeTable];

ALTER TABLE [dbo].[portfolioConfig] WITH CHECK CHECK CONSTRAINT [CK_portfolioConfig];

ALTER TABLE [dbo].[portfolioEvent] WITH CHECK CHECK CONSTRAINT [CK__portfolio__actio__10216507];

ALTER TABLE [dbo].[portfolioTimeTable] WITH CHECK CHECK CONSTRAINT [CK_portfolioTimeTable];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.exchangeDescript'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
